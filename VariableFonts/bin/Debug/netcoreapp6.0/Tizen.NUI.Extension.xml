<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.NUI.Extension</name>
    </assembly>
    <members>
        <member name="T:Tizen.NUI.Extension.TextEditorExtensions">
            <summary>
            Markup extensions for View.
            </summary>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.TranslatableText``1(``0,System.String)">
            <summary>
            The text can set the SID value.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.TranslatablePlaceholderText``1(``0,System.String)">
            <summary>
            The text can set the SID value.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.Text``1(``0,System.String)">
            <summary>
            The text to display in the UTF-8 format.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PlaceholderText``1(``0,System.String)">
            <summary>
            The text to display when the TextEditor is empty and inactive. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.FontFamily``1(``0,System.String)">
            <summary>
            The requested font family to use.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="family">The font family value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.FontStyle``1(``0,Tizen.NUI.FontWidthType,Tizen.NUI.FontWeightType,Tizen.NUI.FontSlantType)">
            <summary>
            Set FontStyle to TextEditor. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The font width value.</param>
            <param name="weight">The font weight value.</param>
            <param name="slant">The font slant value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.FontSize``1(``0,System.Single)">
            <summary>
            The size of font in pixels.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="size">The size value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.TextAlignment``1(``0,Tizen.NUI.HorizontalAlignment,Tizen.NUI.VerticalAlignment)">
            <summary>
            The line vertical alignment.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="horizontal">The horizontal value.</param>
            <param name="vertical">The vertical value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.TextColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.TextColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.TextColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PlaceholderTextColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of the placeholder text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PlaceholderTextColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of the placeholder text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                TextEditor.PlaceholderTextColor(0xFF0000, 1f); // Solid red
                TextEditor.PlaceholderTextColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PlaceholderTextColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of the placeholder text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PrimaryCursorColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color to apply to the primary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PrimaryCursorColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color to apply to the primary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PrimaryCursorColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color to apply to the primary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SecondaryCursorColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color to apply to the secondary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SecondaryCursorColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color to apply to the secondary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SecondaryCursorColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color to apply to the secondary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SelectionHighlightColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of the selection highlight.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SelectionHighlightColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of the selection highlight.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SelectionHighlightColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of the selection highlight.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.InputColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of the new input text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.InputColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of the new input text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.InputColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of the new input text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.EnableMarkup``1(``0,System.Boolean)">
            <summary>
            Whether the mark-up processing is enabled.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="markup">The blink value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.InputFontFamily``1(``0,System.String)">
            <summary>
            The font's family of the new input text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="family">The font family value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.InputFontStyle``1(``0,Tizen.NUI.FontWidthType,Tizen.NUI.FontWeightType,Tizen.NUI.FontSlantType)">
            <summary>
            Set InputFontStyle to TextEditor. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The font width value.</param>
            <param name="weight">The font weight value.</param>
            <param name="slant">The font slant value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.EnableSelection``1(``0,System.Boolean)">
            <summary>
            Enables Text selection, such as the cursor, handle, clipboard, and highlight color.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enabled">The selection value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.EnableEditing``1(``0,System.Boolean)">
            <summary>
            Enable editing in text control.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enabled">The editing value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.Ellipsis``1(``0,System.Boolean)">
            <summary>
            The Ellipsis.<br />
            Enable or disable the ellipsis.<br />
            Placeholder PropertyMap is used to add ellipsis to placeholder text.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enabled">The ellipsis value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.EllipsisPosition``1(``0,Tizen.NUI.EllipsisPosition)">
            <summary>
            Specifies which portion of the text should be replaced with an ellipsis when the text size exceeds the layout size.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="position">The position value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.EnableFontSizeScale``1(``0,System.Boolean)">
            <summary>
            Enable FontSizeScale to TextEditor. <br />
            Whether the font size scale is enabled. (The default value is true)
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enabled">The font size scale enabled value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.FontSizeScale``1(``0,System.Single)">
            <summary>
            Set FontSizeScale to TextEditor. <br />
            The default value is 1.0. <br />
            The given font size scale value is used for multiplying the specified font size before querying fonts. <br />
            If FontSizeScale.UseSystemSetting, will use the SystemSettings.FontSize internally. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="scale">The scale value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.GrabHandleColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of grab handle.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.GrabHandleColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of grab handle.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.GrabHandleColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of grab handle.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.TextColor(Tizen.NUI.BaseComponents.TextEditor)">
            <summary>
            Gets the color for the text of the View.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The text color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PlaceholderTextColor(Tizen.NUI.BaseComponents.TextEditor)">
            <summary>
            Gets the color for the placeholder text of the View.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The placeholder text color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.PrimaryCursorColor(Tizen.NUI.BaseComponents.TextEditor)">
            <summary>
            Gets the color for the primary cursor.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The primary cursor color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SecondaryCursorColor(Tizen.NUI.BaseComponents.TextEditor)">
            <summary>
            Gets the color for the secondary cursor.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The secondary cursor color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.SelectionHighlightColor(Tizen.NUI.BaseComponents.TextEditor)">
            <summary>
            Gets the color for the selection highlight.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The selection highlight color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextEditorExtensions.InputColor(Tizen.NUI.BaseComponents.TextEditor)">
            <summary>
            Gets the color for the input.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The input color value.</returns>
        </member>
        <member name="T:Tizen.NUI.Extension.TextFieldExtensions">
            <summary>
            Markup extensions for View.
            </summary>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.TranslatableText``1(``0,System.String)">
            <summary>
            The text can set the SID value.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.TranslatablePlaceholderText``1(``0,System.String)">
            <summary>
            The text can set the SID value.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.Text``1(``0,System.String)">
            <summary>
            The text to display in the UTF-8 format.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PlaceholderText``1(``0,System.String)">
            <summary>
            The text to display when the TextField is empty and inactive. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PlaceholderTextFocused``1(``0,System.String)">
            <summary>
            The text to display when the TextField is empty with input focus. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.FontFamily``1(``0,System.String)">
            <summary>
            The requested font family to use.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="family">The font family value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.FontStyle``1(``0,Tizen.NUI.FontWidthType,Tizen.NUI.FontWeightType,Tizen.NUI.FontSlantType)">
            <summary>
            Set FontStyle to TextField. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The font width value.</param>
            <param name="weight">The font weight value.</param>
            <param name="slant">The font slant value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.FontSize``1(``0,System.Single)">
            <summary>
            The size of font in pixels.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="size">The size value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.TextAlignment``1(``0,Tizen.NUI.HorizontalAlignment,Tizen.NUI.VerticalAlignment)">
            <summary>
            The line vertical alignment.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="horizontal">The horizontal value.</param>
            <param name="vertical">The vertical value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.TextColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.TextColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.TextColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PlaceholderTextColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of the placeholder text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PlaceholderTextColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of the placeholder text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                textField.PlaceholderTextColor(0xFF0000, 1f); // Solid red
                textField.PlaceholderTextColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PlaceholderTextColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of the placeholder text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PrimaryCursorColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color to apply to the primary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PrimaryCursorColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color to apply to the primary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PrimaryCursorColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color to apply to the primary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.SecondaryCursorColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color to apply to the secondary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.SecondaryCursorColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color to apply to the secondary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.SecondaryCursorColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color to apply to the secondary cursor.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.TextColor(Tizen.NUI.BaseComponents.TextField)">
            <summary>
            Gets the color for the text of the View.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The text color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PlaceholderTextColor(Tizen.NUI.BaseComponents.TextField)">
            <summary>
            Gets the color for the placeholder text of the View.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The placeholder text color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.PrimaryCursorColor(Tizen.NUI.BaseComponents.TextField)">
            <summary>
            Gets the color for the primary cursor.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The primary cursor color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.SecondaryCursorColor(Tizen.NUI.BaseComponents.TextField)">
            <summary>
            Gets the color for the secondary cursor.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The secondary cursor color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.SelectionHighlightColor(Tizen.NUI.BaseComponents.TextField)">
            <summary>
            Gets the color for the selection highlight.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The selection highlight color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextFieldExtensions.InputColor(Tizen.NUI.BaseComponents.TextField)">
            <summary>
            Gets the color for the input.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The input color value.</returns>
        </member>
        <member name="T:Tizen.NUI.Extension.TextLabelExtensions">
            <summary>
            Markup extensions for View.
            </summary>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.TranslatableText``1(``0,System.String)">
            <summary>
            The text can set the SID value.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.Text``1(``0,System.String)">
            <summary>
            The text to display in the UTF-8 format.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="text">The text value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.FontFamily``1(``0,System.String)">
            <summary>
            The requested font family to use.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="family">The font family value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.FontStyle``1(``0,Tizen.NUI.FontWidthType,Tizen.NUI.FontWeightType,Tizen.NUI.FontSlantType)">
            <summary>
            Set FontStyle to TextLabel. <br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The font width value.</param>
            <param name="weight">The font weight value.</param>
            <param name="slant">The font slant value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.FontSize``1(``0,System.Single)">
            <summary>
            The size of font in pixels.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="size">The size value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.TextAlignment``1(``0,Tizen.NUI.HorizontalAlignment,Tizen.NUI.VerticalAlignment)">
            <summary>
            The line vertical alignment.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="horizontal">The horizontal value.</param>
            <param name="vertical">The vertical value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.TextColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.TextColor``1(``0,System.UInt32,System.Single)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.TextColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            The color of the text.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.EnableMarkup``1(``0,System.Boolean)">
            <summary>
            Whether the mark-up processing is enabled.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="markup">The blink value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.EnableAutoScroll``1(``0,System.Boolean)">
            <summary>
            The EnableAutoScroll property.<br />
            Starts or stops auto scrolling.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enabled">The auto scroll enabled value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.AutoScrollSpeed``1(``0,System.Int32)">
            <summary>
            The AutoScrollSpeed property.<br />
            Sets the speed of scrolling in pixels per second.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="speed">The speed value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.AutoScrollLoopCount``1(``0,System.Int32)">
            <summary>
            The AutoScrollLoopCount property.<br />
            Number of complete loops when scrolling enabled.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="count">The count value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.AutoScrollGap``1(``0,System.Single)">
            <summary>
            The AutoScrollGap property.<br />
            Gap before scrolling wraps.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="gap">The gap value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.AutoScrollStopMode``1(``0,Tizen.NUI.AutoScrollStopMode)">
            <summary>
            The AutoScrollLoopCount property.<br />
            Number of complete loops when scrolling enabled.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="mode">The AutoScrollStopMode value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.AutoScrollLoopDelay``1(``0,System.Single)">
            <summary>
            The AutoScrollLoopDelay.<br />
            The amount of time to delay the starting time of auto scrolling and further loops.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="delay">The delay value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.MultiLine``1(``0,System.Boolean)">
            <summary>
            The MultiLine property.<br />
            The single-line or multi-line layout option.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="multiline">The multiline value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.LineWrapMode``1(``0,Tizen.NUI.LineWrapMode)">
            <summary>
            The LineWrapMode property.<br />
            line wrap mode when the text lines over layout width.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="mode">The mode value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.LineSpacing``1(``0,System.Single)">
            <summary>
            The LineSpacing property.<br />
            The default extra space between lines in points.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="spacing">The spacing value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.Ellipsis``1(``0,System.Boolean)">
            <summary>
            The Ellipsis.<br />
            Enable or disable the ellipsis.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enabled">The ellipsis value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.EllipsisPosition``1(``0,Tizen.NUI.EllipsisPosition)">
            <summary>
            Specifies which portion of the text should be replaced with an ellipsis when the text size exceeds the layout size.<br />
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="position">The position value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.EnableFontSizeScale``1(``0,System.Boolean)">
            <summary>
            Enable FontSizeScale to TextLabel. <br />
            Whether the font size scale is enabled. (The default value is true)
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enabled">The font size scale enabled value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.TextLabelExtensions.TextColor(Tizen.NUI.BaseComponents.TextLabel)">
            <summary>
            Gets the color for the text of the View.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The text color value.</returns>
        </member>
        <member name="T:Tizen.NUI.Extension.ViewExtensions">
            <summary>
            Markup extensions for View.
            </summary>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Self``1(``0,``0@)">
            <summary>
            Assign this view reference to the given variable.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="self">The variable to save the reference to.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Color``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the color of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Color``1(``0,System.UInt32,System.Single)">
            <summary>
            Sets the color of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Color``1(``0,Tizen.NUI.UIColor)">
            <summary>
            Sets the color of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BackgroundColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the background color of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BackgroundColor``1(``0,System.UInt32,System.Single)">
            <summary>
            Sets the background color of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BackgroundColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            Sets the background color of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BackgroundImage``1(``0,System.String)">
            <summary>
            Sets the background image of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="url">The resource url.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Size``1(``0,System.Single,System.Single)">
            <summary>
            Sets the size of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The width value.</param>
            <param name="height">The height value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.SizeWidth``1(``0,System.Single)">
            <summary>
            Sets the size width of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The width value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.SizeHeight``1(``0,System.Single)">
            <summary>
            Sets the size height of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="height">The width value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Position``1(``0,System.Single,System.Single)">
            <summary>
            Sets the position of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.PositionX``1(``0,System.Single)">
            <summary>
            Sets the position x of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="x">The x value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.PositionY``1(``0,System.Single)">
            <summary>
            Sets the position y of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="y">The y value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.CornerRadius``1(``0,System.Single,System.Boolean)">
            <summary>
            Sets the corner radius of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="uniform">The uniform corner value.</param>
            <param name="isRelative">Sets the corner radius policy to relative. The default is false.</param>
            <returns>The view itself.</returns>
            <remarks>This sets both <see cref="P:Tizen.NUI.BaseComponents.View.CornerRadius"/> and <see cref="P:Tizen.NUI.BaseComponents.View.CornerRadiusPolicy"/> at once.</remarks>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.CornerRadius``1(``0,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Sets the corner radius of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="topLeft">The top-left value.</param>
            <param name="topRight">The top-right value.</param>
            <param name="bottomRight">The bottom-right value.</param>
            <param name="bottomLeft">The bottom-left value.</param>
            <param name="isRelative">Sets the corner radius policy to relative. The default is false.</param>
            <returns>The view itself.</returns>
            <remarks>This sets both <see cref="P:Tizen.NUI.BaseComponents.View.CornerRadius"/> and <see cref="P:Tizen.NUI.BaseComponents.View.CornerRadiusPolicy"/> at once.</remarks>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.CornerRadius``1(``0,Tizen.NUI.UICorner)">
            <summary>
            Sets the corner radius of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="corner">The corner value.</param>
            <returns>The view itself.</returns>
            <remarks>This sets both <see cref="P:Tizen.NUI.BaseComponents.View.CornerRadius"/> and <see cref="P:Tizen.NUI.BaseComponents.View.CornerRadiusPolicy"/> at once.</remarks>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BoxShadow``1(``0,System.Single,System.Single,System.Single)">
            <summary>
            Sets the box shadow of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="blurRadius">The blur radius value for the shadow. Bigger value, much blurry.</param>
            <param name="offsetX">Optional. The x offset value from the top left corner. The default is 0.</param>
            <param name="offsetY">Optional. The y offset value from the top left corner. The default is 0.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BoxShadow``1(``0,System.Single,Tizen.NUI.UIColor,System.Single,System.Single)">
            <summary>
            Sets the box shadow of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="blurRadius">The blur radius value for the shadow. Bigger value, much blurry.</param>
            <param name="color">The color for the shadow.</param>
            <param name="offsetX">Optional. The x offset value from the top left corner. The default is 0.</param>
            <param name="offsetY">Optional. The y offset value from the top left corner. The default is 0.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BoxShadow``1(``0,Tizen.NUI.UIShadow)">
            <summary>
            Sets the box shadow of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="shadow">The shadow value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BoxShadow(Tizen.NUI.BaseComponents.View)">
            <summary>
            Gets the box shadow of the view.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The box shadow value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.ImageShadow``1(``0,Tizen.NUI.ImageShadow)">
            <summary>
            Sets the image shadow of the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="shadow">The image shadow value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BorderlineWidth``1(``0,System.Single)">
            <summary>
            Sets the width for the borderline of the View.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The width value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BorderlineColor``1(``0,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the color for the borderline of the View.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <param name="a">The alpha component.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BorderlineColor``1(``0,System.UInt32,System.Single)">
            <summary>
            Sets the color for the borderline of the View.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="value">The value of 0xRRGGBB format.</param>
            <param name="alpha">The alpha value between 0.0 and 1.0.</param>
            <example>
            <code>
                new UIColor(0xFF0000, 1f); // Solid red
                new UIColor(0x00FF00, 0.5f) // Half transparent green
            </code>
            </example>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BorderlineColor``1(``0,Tizen.NUI.UIColor)">
            <summary>
            Sets the color for the borderline of the View.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="color">The color value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BorderlineOffset``1(``0,System.Single)">
            <summary>
            Sets the offset for the borderline of the View.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="offset">The offset value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Borderline``1(``0,System.Single,Tizen.NUI.UIColor,System.Single)">
            <summary>
            Sets the borderline of the View.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="width">The width value.</param>
            <param name="color">The color value.</param>
            <param name="offset">The offset value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Opacity``1(``0,System.Single)">
            <summary>
            Sets the view's opacity
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="opacity">The opacity value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.ScaleX``1(``0,System.Single)">
            <summary>
            Sets the scale X factor applied to the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="scale">The scale value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.ScaleY``1(``0,System.Single)">
            <summary>
            Sets the scale Y factor applied to the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="scale">The scale value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Scale``1(``0,System.Single,System.Single)">
            <summary>
            Sets the scale factor applied to the view.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="scaleX">The scale x value.</param>
            <param name="scaleY">The scale y value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Visibility``1(``0,System.Boolean)">
            <summary>
            Sets the visibility of the view.
            <see cref="P:Tizen.NUI.BaseComponents.View.Visibility"/>
            <seealso cref="M:Tizen.NUI.BaseComponents.View.Show"/>
            <seealso cref="M:Tizen.NUI.BaseComponents.View.Hide"/>
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="visiblity">The visibility value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Sensitive``1(``0,System.Boolean)">
            <summary>
            Sets the status of whether the view should emit touch or hover signals.
            If a View is made insensitive, then the View and its children are not hittable.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="sensitive">The sensitive value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.IsEnabled``1(``0,System.Boolean)">
            <summary>
            Sets the status of whether the view should be enabled user interactions.
            If a View is made disabled, then user interactions including touch, focus, and actiavation is disabled.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="enable">The enable value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.ClippingMode``1(``0,Tizen.NUI.ClippingModeType)">
            <summary>
            Sets the clipping behavior (mode) of it's children.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="type">The clipping mode type value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Layout``1(``0,Tizen.NUI.LayoutItem)">
            <summary>
            Set the layout on this View. Replaces any existing Layout.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="layout">The layout for the view.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Focusable``1(``0,System.Boolean)">
            <summary>
            Sets focusable of the view
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="focusable">The focusable value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.FocusableChildren``1(``0,System.Boolean)">
            <summary>
            Sets whether the children of this view can be focusable by keyboard navigation.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="focusable">The focusable value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.FocusableInTouch``1(``0,System.Boolean)">
            <summary>
            Sets whether the view can focus by touch.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="focusable">The focusable value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.VoiceInteractionName``1(``0,System.String)">
            <summary>
            Set voice interaction name for Voice Touch.
            </summary>
            <typeparam name="T">The type of the view.</typeparam>
            <param name="view">The extension target.</param>
            <param name="name">The name value.</param>
            <returns>The view itself.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.Color(Tizen.NUI.BaseComponents.View)">
            <summary>
            Gets the color for the View.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BackgroundColor(Tizen.NUI.BaseComponents.View)">
            <summary>
            Experimental getter for background color
            </summary>
            <param name="view">The extension target.</param>
            <returns>The background color value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.CornerRadius(Tizen.NUI.BaseComponents.View)">
            <summary>
            Gets the corner radius of the view.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The corner radius value.</returns>
        </member>
        <member name="M:Tizen.NUI.Extension.ViewExtensions.BorderlineColor(Tizen.NUI.BaseComponents.View)">
            <summary>
            Gets the color for the borderline of the View.
            </summary>
            <param name="view">The extension target.</param>
            <returns>The borderline color value.</returns>
        </member>
        <member name="T:Tizen.NUI.Extension.RiveAnimationView">
            <summary>
            RiveAnimationView renders an animated vector image (Rive file).
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.#ctor(System.String)">
            <summary>
            RiveAnimationView constructor.
            </summary>
            <param name="url">The rive resource URL</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.EnableAnimation(System.String,System.Boolean)">
            <summary>
            Enables or disables the given animation.
            </summary>
            <param name="animationName">The animation to enable</param>
            <param name="on">The enable state of given animation</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.Play">
            <summary>
            Play animation.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.Pause">
            <summary>
            Pause animation.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.Stop">
            <summary>
            Stop animation.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.SetShapeFillColor(System.String,Tizen.NUI.Color)">
            <summary>
            Sets the shape fill color of given fill.
            </summary>
            <param name="shapeFillName">The shape fill name</param>
            <param name="color">The rgba color</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.SetShapeStrokeColor(System.String,Tizen.NUI.Color)">
            <summary>
            Sets the shape stroke color of given stroke.
            </summary>
            <param name="shapeStrokeName">The shape stroke name</param>
            <param name="color">The rgba color</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.SetNodeOpacity(System.String,System.Single)">
            <summary>
            Sets the opacity of given node.
            </summary>
            <param name="nodeName">The node name</param>
            <param name="opacity">The opacity of given node</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.SetNodeScale(System.String,Tizen.NUI.Vector2)">
            <summary>
            Sets the scale of given node.
            </summary>
            <param name="nodeName">The node name</param>
            <param name="scale">The scale of given node</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.SetNodeRotation(System.String,Tizen.NUI.Degree)">
            <summary>
            Sets the rotation of given node.
            </summary>
            <param name="nodeName">The node name</param>
            <param name="degree">The degree of given node</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.SetNodePosition(System.String,Tizen.NUI.Position)">
            <summary>
            Sets the position of given node.
            </summary>
            <param name="nodeName">The node name</param>
            <param name="position">The position of given node</param>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.NUI.Extension.RiveAnimationView.SetAnimationElapsedTime(System.String,System.Single)">
            <summary>
            Sets the animation elapsed time.
            </summary>
            <param name="animationName">The animation name</param>
            <param name="elapsed">The elapsed time in seconds</param>
            <since_tizen> 9 </since_tizen>
        </member>
    </members>
</doc>
