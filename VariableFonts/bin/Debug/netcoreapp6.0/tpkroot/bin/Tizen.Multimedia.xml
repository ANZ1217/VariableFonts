<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Multimedia</name>
    </assembly>
    <members>
        <member name="T:Tizen.Multimedia.AudioDevice">
            <summary>
            Represents an audio device in the system, providing functionality to query and manipulate its properties.
            The <see cref="T:Tizen.Multimedia.AudioDevice"/> class allows developers to interact with audio devices by retrieving
            detailed information such as the device's ID, name, type, I/O direction, and its current running state.
            Furthermore, it provides methods for getting and setting sample formats and rates, managing resampling options,
            and restricting stream types to media-only, facilitating optimized audio handling for diverse applications.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDevice.Id">
            <summary>
            Gets the unique identifier of the audio device.
            This ID serves as a reference to identify the device within the system and
            is crucial for performing operations on specific devices.
            </summary>
            <value>The id of the device.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDevice.Name">
            <summary>
            Gets the name of the audio device.
            This property provides a human-readable identifier for the device,
            which can be used in user interfaces or logs to display information
            about the current audio output/input device.
            </summary>
            <value>The name of the device.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDevice.Type">
            <summary>
            Gets the type of the audio device.
            This property returns an enumerated value of type <see cref="T:Tizen.Multimedia.AudioDeviceType"/>
            that indicates the specific category of the device, such as speakers, microphones,
            or headphones, which helps in distinguishing between different device functionalities.
            </summary>
            <value>The <see cref="T:Tizen.Multimedia.AudioDeviceType"/> of the device.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDevice.IoDirection">
            <summary>
            Gets the input/output (I/O) direction of the audio device.
            This property indicates whether the device is designed for input (recording) or output (playback),
            allowing developers to manage device usage appropriately in their applications.
            </summary>
            <value>The IO direction of the device.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDevice.IsRunning">
            <summary>
            Gets a value indicating whether the audio device is currently running.
            This property checks the operational state of the device and returns <c>true</c>
            if the device is active and processing audio, or <c>false</c> if it is idle or inactive.
            </summary>
            <value>true if the audio stream of device is running actually; otherwise, false.</value>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.GetSupportedSampleFormats">
            <summary>
            Retrieves a collection of audio sample formats supported by the device.
            This method returns an enumerable list of <see cref="T:Tizen.Multimedia.AudioSampleFormat"/> values
            indicating the different audio formats the device can handle, enabling applications
            to select a compatible format for audio processing.
            </summary>
            <returns>An IEnumerable&lt;AudioSampleFormat&gt; that contains supported sample formats.</returns>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.SetSampleFormat(Tizen.Multimedia.AudioSampleFormat)">
            <summary>
            Sets the sample format for the audio device.
            This method allows developers to specify a desired <see cref="T:Tizen.Multimedia.AudioSampleFormat"/> for
            audio playback or recording.
            </summary>
            <param name="format">The <see cref="T:Tizen.Multimedia.AudioSampleFormat"/> to set to the device.</param>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.GetSampleFormat">
            <summary>
            Gets the current sample format used by the audio device.
            This method retrieves the current <see cref="T:Tizen.Multimedia.AudioSampleFormat"/> the device is operating with,
            allowing applications to verify or adjust to the active format being utilized for audio streams.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.AudioSampleFormat"/> of the device.</returns>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.GetSupportedSampleRates">
            <summary>
            Retrieves the sample rates that the audio device supports.
            This method returns an enumerable list of supported sample rates, allowing developers
            to select an appropriate rate for audio processing based on the capabilities of the device.
            </summary>
            <returns>An IEnumerable&lt;uint&gt; that contains supported sample rates.</returns>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.SetSampleRate(System.UInt32)">
            <summary>
            Sets the sample rate for the audio device.
            This method allows you to specify a desired sample rate (in Hz) for audio playback or recording.
            Choosing an appropriate sample rate is important for maintaining audio quality and ensuring compatibility
            with audio data formats.
            </summary>
            <param name="rate">The sample rate to set to the device.</param>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.GetSampleRate">
            <summary>
            Gets the current sample rate of the audio device.
            This method retrieves the sample rate currently in use for audio processing, allowing
            applications to ensure they are operating with the correct audio quality settings.
            </summary>
            <returns>The sample rate of the device.</returns>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.SetAvoidResampling(System.Boolean)">
            <summary>
            Sets the 'avoid resampling' property for the audio device.
            This property controls whether the device should avoid resampling audio data during playback.
            Enabling this feature can help preserve audio quality by preventing alterations to audio that
            may happen during playback.
            </summary>
            <param name="enable">The 'avoid resampling' value to set to the device.</param>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            This property is not enabled as default. With this enabled, this device will use the first stream's original sample format
            and rate without resampling if supported.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.GetAvoidResampling">
            <summary>
            Gets the current state of the 'avoid resampling' property for the audio device.
            This method returns whether the device is currently configured to avoid resampling audio data,
            allowing developers to assess the current settings related to audio processing quality.
            </summary>
            <returns>The 'avoid resampling' property of the device.</returns>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            This property is not enabled as default. With this enabled, this device will use the first stream's original sample format
            and rate without resampling if supported.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.SetMediaStreamOnly(System.Boolean)">
            <summary>
            Sets a restriction on the audio device to allow only media streams.
            This method configures the device to accept only audio streams of type
            <see cref="F:Tizen.Multimedia.AudioStreamType.Media"/>. When enabled, the device will reject
            any other stream types, ensuring that it is exclusively used for media playback.
            </summary>
            <param name="enable">The 'media stream only' value to set to the device.</param>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            This property is not enabled as default. With this enabled, no other stream types except <see cref="F:Tizen.Multimedia.AudioStreamType.Media"/>
            are not allowed to this device.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.GetMediaStreamOnly">
            <summary>
            Retrieves the current restriction status of the audio device regarding media streams.
            This method checks whether the device is currently configured to accept only media streams,
            returning a boolean value that indicates the state of the restriction.
            </summary>
            <returns>The 'media stream only' property of the device.</returns>
            <remarks>
            This device should be <see cref="F:Tizen.Multimedia.AudioDeviceType.UsbAudio"/> type and <see cref="F:Tizen.Multimedia.AudioDeviceIoDirection.Output"/> direction.
            This property is not enabled as default. With this enabled, no other stream types except <see cref="F:Tizen.Multimedia.AudioStreamType.Media"/>
            are not allowed to this device.
            </remarks>
            <exception cref="T:System.InvalidOperationException">This device is not valid or is disconnected.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.ToString">
            <summary>
            Returns a string representation of the current instance.
            This method provides a formatted string that includes key properties of the audio device,
            such as its unique identifier, name, type, I/O direction, and running state.
            This representation can be useful for logging, debugging, or displaying device information
            in user interfaces.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.Equals(System.Object)">
            <summary>
            Compares the current instance of <see cref="T:Tizen.Multimedia.AudioDevice"/> with another object for equality.
            This method checks if the specified object is an instance of <see cref="T:Tizen.Multimedia.AudioDevice"/>
            and compares their unique identifiers to determine if they represent the same audio device.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the two devices are equal; otherwise, false.</returns>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDevice.GetHashCode">
            <summary>
            Retrieves the hash code for the current instance of <see cref="T:Tizen.Multimedia.AudioDevice"/>.
            This method generates a hash code based on the unique identifier of the audio device,
            which can be useful for storing instances in hash-based collections such as dictionaries
            or hash sets.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.AudioDevice"/>.</returns>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioDeviceConnectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.AudioManager.DeviceConnectionChanged"/> event.
            This event is triggered when there is a change in the connection status of an audio device,
            such as when a device is connected or disconnected from the system.
            The <see cref="T:Tizen.Multimedia.AudioDeviceConnectionChangedEventArgs"/> class encapsulates information
            about the device involved in the connection change and its current connection state,
            allowing developers to easily respond to changes in the audio subsystem and update
            application behavior accordingly.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDeviceConnectionChangedEventArgs.Device">
            <summary>
            Gets the device that is involved in the connection change.
            This property returns an instance of <see cref="T:Tizen.Multimedia.AudioDevice"/>, which represents
            the specific audio device that has been connected or disconnected.
            This information is essential for applications that need to manage multiple audio devices,
            allowing them to identify the affected device and adjust their functionality accordingly.
            </summary>
            <value>The <see cref="T:Tizen.Multimedia.AudioDevice"/>.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDeviceConnectionChangedEventArgs.IsConnected">
            <summary>
            Gets the current connection state of the device.
            This property indicates whether the audio device is currently connected to the system.
            It will return <c>true</c> if the device is connected and <c>false</c> if it has
            been disconnected. This information is crucial for determining the audio routing and
            playback options, enabling applications to appropriately react to the presence
            or absence of audio devices in the environment.
            </summary>
            <value>true if the device is connected; otherwise, false.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioDeviceIoDirection">
            <summary>
            Defines the data flow directions for audio devices, indicating whether
            a device is for input, output, or both. This helps in managing audio
            interactions within applications effectively.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceIoDirection.Input">
            <summary>
            Input device.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceIoDirection.Output">
            <summary>
            Output device.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceIoDirection.InputAndOutput">
            <summary>
            Input/output device (both directions are available).
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioDeviceOptions">
            <summary>
            Specifies the flags for the audio device options.
            <para>
            This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </para>
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceOptions.Input">
            <summary>
            Input devices.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceOptions.Output">
            <summary>
            Output devices.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceOptions.InputAndOutput">
            <summary>
            Input and output devices (both directions are available).
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceOptions.Internal">
            <summary>
            Built-in devices.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceOptions.External">
            <summary>
            External devices.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceOptions.All">
            <summary>
            All devices.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioDeviceRunningChangedEventArgs">
            <summary>
            Provides the data for the <see cref="E:Tizen.Multimedia.AudioManager.DeviceRunningChanged"/> event,
            which is triggered when the running state of an audio device changes.
            This class encapsulates information about the specific audio device
            that has undergone a state change, as well as its current running status,
            allowing subscribers to respond appropriately to changes in audio device activity.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDeviceRunningChangedEventArgs.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The <see cref="T:Tizen.Multimedia.AudioDevice"/>.</value>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDeviceRunningChangedEventArgs.IsRunning">
            <summary>
            Gets the running state of the device.
            </summary>
            <value>true if the audio stream of device is running actually; otherwise, false.</value>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioDeviceType">
            <summary>
            Represents the various types of audio devices available in the system.
            This enumeration categorizes audio devices based on their functionality and
            connection type, enabling developers to easily identify and utilize
            the appropriate audio device for their applications. The types include
            built-in speakers and microphones, external connections like audio jacks,
            Bluetooth, HDMI, USB audio, and network audio devices, facilitating
            effective audio management in diverse scenarios.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.BuiltinSpeaker">
            <summary>
            Represents the built-in speaker of the device, typically used for
            playback of audio through the device's internal audio output.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.BuiltinReceiver">
            <summary>
            Represents the built-in receiver, usually utilized for phone calls
            and communication through the device, providing audio input and output.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.BuiltinMic">
            <summary>
            Represents the built-in microphone, used for capturing audio input
            from the environment, such as for voice commands, calls, or recordings.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.AudioJack">
            <summary>
            Indicates an audio jack that allows the connection of wired accessories
            such as headphones and headsets, providing a physical interface for
            audio playback and recording.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.BluetoothMedia">
            <summary>
            Represents Bluetooth media devices using the A2DP (Advanced Audio
            Distribution Profile) standard for streaming high-quality audio wirelessly.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.Hdmi">
            <summary>
            Represents HDMI audio output, allowing the transmission of high-fidelity
            audio and video to external displays or audio receivers through an HDMI cable.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.Forwarding">
            <summary>
            Represents devices used for forwarding audio data, which may involve
            relaying audio signals to other devices or systems for processing or playback.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.UsbAudio">
            <summary>
            Represents USB audio devices, which connect through USB ports to provide
            audio input and output, such as external sound cards or USB microphones.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.BluetoothVoice">
            <summary>
            Represents Bluetooth voice devices using the SCO (Synchronous Connection
            Oriented) profile, primarily used for voice communication over Bluetooth.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioDeviceType.Network">
            <summary>
            Represents devices that transmit audio data over a network, enabling audio
            streaming or communication over internet or local networks.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioDucking">
            <summary>
            Controls audio ducking for specific audio streams, allowing for dynamic
            adjustment of audio levels during playback. This class enables the activation
            and deactivation of ducking, monitors ducking state changes, and ensures proper
            privileges are in place for volume adjustments.
            </summary>
            <seealso cref="T:Tizen.Multimedia.AudioManager"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDucking.#ctor(Tizen.Multimedia.AudioStreamType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.AudioDucking"/> class for a specified audio stream type.
            This constructor sets up the audio ducking mechanism for the target stream, allowing
            the application to respond to ducking state changes.
            </summary>
            <param name="targetType">The type of sound stream affected by this new instance.</param>
            <exception cref="T:System.ArgumentException"><paramref name="targetType"/> is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">Operation failed; internal error.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.AudioDucking.DuckingStateChanged">
            <summary>
            Occurs when the ducking state of the audio stream changes,
            notifying subscribers of the current ducking status.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDucking.IsDucked">
            <summary>
            Gets a value indicating whether the audio stream is currently ducked.
            This property checks the ducking state and returns true if the audio
            level is lowered; otherwise, false.
            </summary>
            <value>true if the audio stream is ducked; otherwise, false.</value>
            <exception cref="T:System.InvalidOperationException">Operation failed; internal error.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioDucking"/> has already been disposed of.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDucking.Activate(System.UInt32,System.Double)">
            <summary>
            Activates audio ducking for a specified duration and volume ratio.
            This method lowers the audio level of the target stream for a defined
            period, enabling a smoother audio experience during events like notifications.
            </summary>
            <param name="duration">The duration for ducking in milliseconds.</param>
            <param name="ratio">The volume ratio when ducked.</param>
            <remarks>To activate ducking, the specified privilege is required.</remarks>
            <privilege>http://tizen.org/privilege/volume.set</privilege>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="duration"/> is less than 0 or greater than 3000.<br/>
                -or-<br/>
                <paramref name="ratio"/> is less than 0.0 or greater than or equal to 1.0.<br/>
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.<br/>
                -or-<br/>
                The target stream is already ducked.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have required privilege to set volume.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioDucking"/> has already been disposed of.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDucking.Deactivate">
            <summary>
            Deactivates audio ducking, restoring the audio levels of the target stream
            to their original state. This method is used to stop the ducking effect
            applied earlier when needed.
            </summary>
            <remarks>To deactivate ducking, the specified privilege is required.</remarks>
            <privilege>http://tizen.org/privilege/volume.set</privilege>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.<br/>
                -or-<br/>
                The target stream is already unducked.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have required privilege to set volume.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioDucking"/> has already been disposed of.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDucking.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Tizen.Multimedia.AudioDucking"/> instance.
            This method clears any allocated resources and should be called when
            the <see cref="T:Tizen.Multimedia.AudioDucking"/> object is no longer needed.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioDuckingStateChangedEventArgs">
            <summary>
            Represents the event data for the <see cref="E:Tizen.Multimedia.AudioDucking.DuckingStateChanged"/> event,
            which is triggered when the ducking state of an audio stream changes.
            This class provides information about whether the audio stream is currently ducked or not.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioDuckingStateChangedEventArgs.IsDucked">
            <summary>
            Gets a value indicating whether the audio stream is currently in a ducked state.
            This property reflects the status of the audio stream, where <c>true</c>
            signifies that the audio level has been lowered, and <c>false</c> indicates
            that the audio is at its normal level.
            </summary>
            <value>true if the state is ducked; otherwise, false.</value>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioManager">
            <summary>
            Provides functionality to control volume levels and monitor the status of audio devices within the system.
            The <see cref="T:Tizen.Multimedia.AudioManager"/> class enables developers to retrieve the volume controller,
            obtain a list of currently connected audio devices, and subscribe to events related to device connection changes
            as well as audio stream status changes, thereby facilitating comprehensive audio management.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioManager.VolumeController">
            <summary>
            Gets the volume controller, which allows for adjustment and retrieval of the current audio volume level.
            This property provides access to methods and properties that enable developers to manage volume settings
            for different audio streams and ensure that the audio experience meets user preferences.
            </summary>
            <value>The <see cref="T:Tizen.Multimedia.AudioVolume"/>.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioManager.GetConnectedDevices">
            <summary>
            Retrieves a collection of all audio devices currently connected to the system.
            This method returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/>, allowing developers to easily enumerate
            through all available audio devices, such as speakers, microphones, and headphones.
            It is useful for applications that need to adapt to changes in the audio environment or support
            multiple audio output/input devices.
            </summary>
            <returns>An IEnumerable&lt;AudioDevice&gt; that contains connected devices.</returns>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.AudioManager.DeviceConnectionChanged">
            <summary>
            Occurs when the state of an audio device connection changes, such as when a device is connected or disconnected.
            Subscribing to this event allows developers to be notified of changes in the audio setup, enabling
            dynamic adjustments in the application to accommodate new devices or handle disconnections accordingly.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.AudioManager.DeviceRunningChanged">
            <summary>
            Occurs when an audio stream starts running on a connected audio device.
            This event is triggered when a new audio stream begins after all previous streams have stopped.
            It is important to note that if this event is invoked while an audio stream is still running,
            it will not be triggered again until all streams have been stopped and a new one starts.
            This is especially useful for managing audio playback scenarios where multiple audio streams
            may be played sequentially.
            </summary>
            <remarks>
            If this event is invoked once and the audio stream is still running on the device,<br/>
            this event will not be invoked anymore, even if there are more audio streams to run.<br/>
            This event is invoked only when all streams are stopped and a new stream starts to run.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            AudioManager failed to communicate internally or allocate memory.
            </exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.None">
            <summary>
            Successful
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.OutOfMemory">
            <summary>
            Out of memory
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.InvalidParameter">
            <summary>
            Invalid parameter
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.InvalidOperation">
            <summary>
            Invalid operation
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.PermissionDenied">
            <summary>
            Permission denied
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.NotSupported">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.NoData">
            <summary>
            No data
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.Internal">
            <summary>
            Internal error inside the sound system
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.Policy">
            <summary>
            Noncompliance with the sound system policy
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.NoPlayingSound">
            <summary>
            No playing sound
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioManagerError.InvalidState">
            <summary>
            Invalid state (Since 3.0)
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioPolicyException">
            <summary>
            Represents an exception that is thrown when there is a violation of the sound system policy.
            This exception indicates that an operation has attempted to perform an action that
            is not compliant with the established audio policies, which may affect audio playback or
            manipulation within the application.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioPolicyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.AudioPolicyException"/> class
            without any error message. This constructor is typically used when the
            exception is thrown without specific details about the error.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioPolicyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.AudioPolicyException"/> class
            with a specified error message. This message provides additional context
            regarding the reason for the exception, which can be useful for debugging
            and logging purposes.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.AudioPolicyException"/> class
            with a specified error message and a reference to the inner exception
            that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception..</param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioSampleFormat">
            <summary>
            Specifies the audio sample formats.
            </summary>
            <summary>
            Enumerates the various audio sample formats that are supported in the audio
            processing system. Each format represents a different way that audio signal
            data can be encoded and represented in memory.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioSampleFormat.U8">
            <summary>
            Represents audio samples encoded as unsigned 8-bit integers.
            This format is often used in low-quality audio files and
            applications where bandwidth or storage space is limited.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioSampleFormat.S16LE">
            <summary>
            Represents audio samples encoded as signed 16-bit integers in
            little-endian format. This format is commonly used in CD-quality
            audio, providing a good balance between audio fidelity and file size.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioSampleFormat.S24LE">
            <summary>
            Represents audio samples encoded as signed 24-bit integers in
            little-endian format. This high-resolution format allows for greater
            dynamic range and fidelity, making it suitable for professional audio
            applications and high-quality sound recordings.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioSampleFormat.S24PackedIn32LE">
            <summary>
            Represents audio samples encoded as signed 24-bit integers,
            packed into 32-bit containers in little-endian format. This format
            can be used for applications that require compatibility with 32-bit
            processing, allowing for easier manipulation of samples at the cost of
            additional space.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamBehaviors">
            <summary>
            Defines the flags that specify the behaviors of audio streams.
            This enumeration allows for a bitwise combination of its member values,
            enabling flexible configurations for audio playback and management.
            <para>
            This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </para>
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamBehaviors.NoResume">
            <summary>
            Indicates that the audio stream should not resume automatically
            after being paused or stopped. This flag can be used when
            explicit control over playback is desired, requiring the application
            to manually manage the resumption of audio playback.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamBehaviors.Fading">
            <summary>
            Indicates that the audio stream should apply a fading effect
            during transitions. This behavior is useful for creating smoother
            audio experiences, such as gradually lowering the volume before
            stopping or increasing the volume when starting playback.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamFocusChangedReason">
            <summary>
            Enumerates the reasons for changes in the focus state of an audio stream.
            This enumeration provides specific contexts in which the audio stream
            focus may be gained or lost, ensuring developers can respond appropriately.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.Media">
            <summary>
            Media.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.System">
            <summary>
            System.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.Alarm">
            <summary>
            Alarm.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.Notification">
            <summary>
            Notification.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.Emergency">
            <summary>
            Emergency.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.VoiceInformation">
            <summary>
            Voice information.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.VoiceRecognition">
            <summary>
            Voice recognition.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.RingtoneVoip">
            <summary>
            Ringtone.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.Voip">
            <summary>
            VoIP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.Call">
            <summary>
            Voice-call or video-call.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusChangedReason.MediaExternalOnly">
            <summary>
            Media only for external devices.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamFocusOptions">
            <summary>
            Defines the flags for configuring audio stream focus options.
            This enumeration allows developers to specify different behaviors
            regarding how audio focus should be managed within an application
            or among multiple audio streams.
            <para>
            This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </para>
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusOptions.Playback">
            <summary>
            Playback focus.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusOptions.Recording">
            <summary>
            Recording focus.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamFocusState">
            <summary>
            Represents the various states of audio stream focus within an application.
            This enumeration defines the focus states that can be utilized to manage
            audio playback effectively, ensuring that developers can track and respond
            to changes in audio focus, which is crucial in multi-stream environments.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusState.Released">
            <summary>
            Focus state for release.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamFocusState.Acquired">
            <summary>
            Focus state for acquisition.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamPolicy">
            <summary>
            Provides functionalities to control and manage sound streams within an application.
            The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> class enables developers to set policies for
            playback and recording audio streams, adjusting settings for focus and routing,
            as well as configuring audio devices and sound effects.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.#ctor(Tizen.Multimedia.AudioStreamType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> class with <see cref="T:Tizen.Multimedia.AudioStreamType"/>.
            </summary>
            <remarks>
            To apply the stream policy according to this stream information, the AudioStreamPolicy should
            be passed to other APIs related to playback or recording. (For example., <see cref="T:Tizen.Multimedia.Player"/>,
            <see cref="T:Tizen.Multimedia.WavPlayer"/> , etc.)
            </remarks>
            <param name="streamType">The type of the sound stream for which the policy needs to be created.</param>
            <exception cref="T:System.ArgumentException"><paramref name="streamType"/> is invalid.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.AudioStreamPolicy.FocusStateChanged">
            <summary>
            Occurs when the state of focus for the current <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> changes.
            This event allows subscribers to react to changes in audio focus state,
            helping to manage audio playback or recording effectively.
            </summary>
            <remarks>
            The event is raised in the internal thread.
            </remarks>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicy.VolumeType">
            <summary>
            Gets the <see cref="T:Tizen.Multimedia.AudioVolumeType"/>.
            </summary>
            <remarks>
            If the <see cref="T:Tizen.Multimedia.AudioStreamType"/> of the current AudioStreamPolicy is <see cref="F:Tizen.Multimedia.AudioStreamType.Emergency"/>,
            it returns <see cref="F:Tizen.Multimedia.AudioVolumeType.None"/>.
            </remarks>
            <value>The <see cref="T:Tizen.Multimedia.AudioVolumeType"/> of the policy instance.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicy.PlaybackFocusState">
            <summary>
            Gets the state of focus for the playback.
            </summary>
            <value>The state of focus for playback.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicy.RecordingFocusState">
            <summary>
            Gets the state of focus for the recording.
            </summary>
            <value>The state of focus for recording.</value>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicy.FocusReacquisitionEnabled">
            <summary>
            Gets or sets the auto focus reacquisition.
            </summary>
            <value>
            true if the auto focus reacquisition is enabled; otherwise, false.<br/>
            The default is true.
            </value>
            <remarks>
            If you don't want to reacquire the focus you've lost automatically,
            disable the focus reacquisition.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.AcquireFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)">
            <summary>
            Acquires the stream focus.
            </summary>
            <param name="options">The focuses that you want to acquire.</param>
            <param name="behaviors">The requesting behaviors.</param>
            <param name="extraInfo">The extra information for this request. This value can be null.</param>
            <exception cref="T:System.ArgumentException"><paramref name="options"/> is zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="options"/> contain a invalid bit.<br/>
                -or-<br/>
                <paramref name="behaviors"/> contain a invalid bit.
            </exception>
            <exception cref="T:System.InvalidOperationException">The focus has already been acquired.</exception>
            <exception cref="T:Tizen.Multimedia.AudioPolicyException">Called in <see cref="E:Tizen.Multimedia.AudioStreamPolicy.FocusStateChanged"/> raised by releasing focus.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.ReleaseFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)">
            <summary>
            Releases the acquired focus.
            </summary>
            <param name="options">The focus mask that you want to release.</param>
            <param name="behaviors">The requesting behaviors.</param>
            <param name="extraInfo">The extra information for this request. This value can be null.</param>
            <exception cref="T:System.ArgumentException"><paramref name="options"/> is zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="options"/> contain a invalid bit.<br/>
                -or-<br/>
                <paramref name="behaviors"/> contain a invalid bit.
            </exception>
            <exception cref="T:System.InvalidOperationException">The focus has not been acquired.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.ApplyStreamRouting">
            <summary>
            Applies the stream routing.
            </summary>
            <remarks>
            If the stream has not been made yet, this will be applied when the stream starts to play.
            </remarks>
            <seealso cref="M:Tizen.Multimedia.AudioStreamPolicy.AddDeviceForStreamRouting(Tizen.Multimedia.AudioDevice)"/>
            <seealso cref="M:Tizen.Multimedia.AudioStreamPolicy.RemoveDeviceForStreamRouting(Tizen.Multimedia.AudioDevice)"/>
            <exception cref="T:System.InvalidOperationException">
                A device has not been set.<br/>
                -or-<br/>
                An internal error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.AddDeviceForStreamRouting(Tizen.Multimedia.AudioDevice)">
            <summary>
            Adds a device for the stream routing.
            </summary>
            <param name="device">The device to add.</param>
            <remarks>
            The available <see cref="T:Tizen.Multimedia.AudioStreamType"/> is <see cref="F:Tizen.Multimedia.AudioStreamType.Voip"/> and <see cref="F:Tizen.Multimedia.AudioStreamType.MediaExternalOnly"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
                The device is not connected.<br/>
                -or-<br/>
                An internal error occurs.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="device"/> is null.</exception>
            <exception cref="T:Tizen.Multimedia.AudioPolicyException"><see cref="T:Tizen.Multimedia.AudioStreamType"/> of <paramref name="device"/> is unavailable for this.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.AudioManager.GetConnectedDevices"/>
            <seealso cref="M:Tizen.Multimedia.AudioStreamPolicy.ApplyStreamRouting"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.RemoveDeviceForStreamRouting(Tizen.Multimedia.AudioDevice)">
            <summary>
            Removes the device for the stream routing.
            </summary>
            <param name="device">The device to remove.</param>
            <remarks>
            The available <see cref="T:Tizen.Multimedia.AudioStreamType"/> is <see cref="F:Tizen.Multimedia.AudioStreamType.Voip"/> and <see cref="F:Tizen.Multimedia.AudioStreamType.MediaExternalOnly"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">An internal error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="device"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.AudioManager.GetConnectedDevices"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicy.PreferredInputDevice">
            <summary>
            Gets or sets the preferred input device.
            </summary>
            <value>
            The <see cref="T:Tizen.Multimedia.AudioDevice"/> instance.<br/>
            The default is null which means any device is not set on this property.
            </value>
            <remarks>
            This property is to set a specific built-in device when the system has multiple devices of the same built-in device type.
            When there's only one device for a built-in device type in the system, nothing will happen even if this property is set successfully.
            </remarks>
            <exception cref="T:System.ArgumentException">A device is not for input.</exception>
            <exception cref="T:System.InvalidOperationException">An internal error occurs.</exception>
            <exception cref="T:Tizen.Multimedia.AudioPolicyException">A device is not supported by this <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> instance.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.AudioManager.GetConnectedDevices"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicy.PreferredOutputDevice">
            <summary>
            Gets or sets the preferred output device.
            </summary>
            <value>
            The <see cref="T:Tizen.Multimedia.AudioDevice"/> instance.<br/>
            The default is null which means any device is not set on this property.
            </value>
            <remarks>
            This property is to set a specific built-in device when the system has multiple devices of the same built-in device type.
            When there's only one device for a built-in device type in the system, nothing will happen even if this property is set successfully.
            </remarks>
            <exception cref="T:System.ArgumentException">A device is not for output.</exception>
            <exception cref="T:System.InvalidOperationException">An internal error occurs.</exception>
            <exception cref="T:Tizen.Multimedia.AudioPolicyException">A device is not supported by this <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> instance.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.AudioManager.GetConnectedDevices"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.HasStreamOnDevice(Tizen.Multimedia.AudioDevice)">
            <summary>
            Checks if any stream from the current AudioStreamPolicy is using the device.
            </summary>
            <returns>true if any audio stream from the current AudioStreamPolicy is using the device; otherwise, false.</returns>
            <param name="device">The device to be checked.</param>
            <remarks>
            The AudioStreamPolicy can be applied to each playback or recording stream via other API set.
            (For example., <see cref="T:Tizen.Multimedia.Player"/>, <see cref="T:Tizen.Multimedia.WavPlayer"/>,
            <see cref="T:Tizen.Multimedia.AudioPlayback"/>, <see cref="T:Tizen.Multimedia.AudioCapture"/>, etc.)
            This method returns true only when the device is used for the stream which meets to the two conditions.
            One is that the current AudioStreamPolicy sets a audio route path to the device and the other is that the playback
            or recording stream from other API set should have already started to prepare or to play.(It depends on the API set.)
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="device"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An internal error occurs.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.AudioManager.GetConnectedDevices"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.SetSoundEffect(Tizen.Multimedia.SoundEffectInfo,System.Boolean)">
            <summary>
            Sets the sound effect.
            </summary>
            <remarks>
            If <paramref name="withReference"/> is true, <paramref name="info.Type.Type"/> must be <see cref="F:Tizen.Multimedia.SoundEffectType.ReferenceCopy"/> or
            <see cref="F:Tizen.Multimedia.SoundEffectType.AecSpeex"/> or <see cref="F:Tizen.Multimedia.SoundEffectType.AecWebrtc"/>.
            And <paramref name="info.ReferenceDevice.ReferenceDevice"/> must not be null.<br/>
            If <paramref name="withReference"/> is false, <paramref name="info.Type.Type"/> must be <see cref="F:Tizen.Multimedia.SoundEffectType.NoiseSuppression"/> or
            <see cref="F:Tizen.Multimedia.SoundEffectType.AutoGainControl"/> or <see cref="F:Tizen.Multimedia.SoundEffectType.NsWithAgc"/>.
            </remarks>
            <param name="info">See <see cref="T:Tizen.Multimedia.SoundEffectInfo"/>.</param>
            <param name="withReference">A reference device for sound effect.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="withReference"/> is true, A reference device is null.</exception>
            <exception cref="T:Tizen.Multimedia.AudioPolicyException">The current <see cref="T:Tizen.Multimedia.AudioStreamType"/> is not supported for sound effect with reference.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed.</exception>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.GetSoundEffect(System.Boolean)">
            <summary>
            Gets the sound effect.
            </summary>
            <remarks>
            If <paramref name="withReference"/> is false, <see cref="P:Tizen.Multimedia.SoundEffectInfo.ReferenceDevice"/> of returned value will be null.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            The sound effect is not set yet.<br/>
            - or -<br/>
            There's no matched AudioDevice.
            </exception>
            <exception cref="T:System.InvalidOperationException">Sound effect is not set yet.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> has already been disposed.</exception>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/>.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamPolicy.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/>.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.AudioStreamPolicy.StreamFocusStateChanged">
            <summary>
            Occurs when the focus state for stream types is changed regardless of the process.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamPolicyFocusStateChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.AudioStreamPolicy.FocusStateChanged"/> event.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicyFocusStateChangedEventArgs.FocusOptions">
            <summary>
            Gets the focus options.
            </summary>
            <value>The focus options.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicyFocusStateChangedEventArgs.FocusState">
            <summary>
            Gets the focus state.
            </summary>
            <value>The focus state.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicyFocusStateChangedEventArgs.Reason">
            <summary>
            Gets the reason for state change of the focus.
            </summary>
            <value>The reason for state change of the focus.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicyFocusStateChangedEventArgs.Behaviors">
            <summary>
            Gets the requested behaviors that should be followed.
            </summary>
            <value>The requested behaviors that should be followed.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamPolicyFocusStateChangedEventArgs.ExtraInfo">
            <summary>
            Gets the extra information.
            </summary>
            <value>
            The extra information specified in <see cref="M:Tizen.Multimedia.AudioStreamPolicy.AcquireFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/> or
            <see cref="M:Tizen.Multimedia.AudioStreamPolicy.ReleaseFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/>.
            </value>
            <seealso cref="M:Tizen.Multimedia.AudioStreamPolicy.AcquireFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/>
            <seealso cref="M:Tizen.Multimedia.AudioStreamPolicy.ReleaseFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamType">
            <summary>
            Specifies the audio stream types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.Media">
            <summary>
            Media.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.System">
            <summary>
            System.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.Alarm">
            <summary>
            Alarm.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.Notification">
            <summary>
            Notification.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.Emergency">
            <summary>
            Emergency.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.VoiceInformation">
            <summary>
            Voice information.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.VoiceRecognition">
            <summary>
            Voice recognition.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.RingtoneVoip">
            <summary>
            Ringtone for VoIP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.Voip">
            <summary>
            VoIP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioStreamType.MediaExternalOnly">
            <summary>
            Media only for external devices.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioVolume">
            <summary>
            Provides the ability to control the volume levels.
            </summary>
            <seealso cref="T:Tizen.Multimedia.AudioManager"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.AudioVolume.Changed">
            <summary>
            Occurs when the volume level is changed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioVolume.CurrentPlaybackType">
            <summary>
            Gets the volume type of the sound being currently played.
            </summary>
            <value>The volume type of the sound being currently played.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioVolume.Level">
            <summary>
            Gets the <see cref="T:Tizen.Multimedia.VolumeLevel"/>.
            </summary>
            <value>The <see cref="T:Tizen.Multimedia.VolumeLevel"/>.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioVolume.MaxLevel">
            <summary>
            Gets the <see cref="T:Tizen.Multimedia.MaxVolumeLevel"/>.
            </summary>
            <value>The <see cref="T:Tizen.Multimedia.MaxVolumeLevel"/>.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioVolumeType">
            <summary>
            Specifies the audio volume types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.System">
            <summary>
            System.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.Notification">
            <summary>
            Notification.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.Alarm">
            <summary>
            Alarm.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.Ringtone">
            <summary>
            Ringtone.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.Media">
            <summary>
            Media.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.Call">
            <summary>
            Call.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.Voip">
            <summary>
            VoIP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.Voice">
            <summary>
            Voice.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioVolumeType.None">
            <summary>
            No volume exists.
            </summary>
            <seealso cref="P:Tizen.Multimedia.AudioStreamPolicy.VolumeType"/>
        </member>
        <member name="T:Tizen.Multimedia.MaxVolumeLevel">
            <summary>
            Provides a means to get max volume levels.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MaxVolumeLevel.Item(Tizen.Multimedia.AudioVolumeType)">
            <summary>
            Gets the max volume level of the specified <see cref="T:Tizen.Multimedia.AudioVolumeType"/>.
            </summary>
            <param name="type">The <see cref="T:Tizen.Multimedia.AudioVolumeType"/> to query.</param>
            <value>The maximum volume level.</value>
            <exception cref="T:System.ArgumentException"><paramref name="type"/> is invalid.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="type"/> is <see cref="F:Tizen.Multimedia.AudioVolumeType.None"/>.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.SoundEffectType">
            <summary>
            Defines the various types of sound effects that can be applied to audio processing.
            Each sound effect type serves a specific purpose in enhancing audio quality for different scenarios.
            </summary>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.SoundEffectType.NoiseSuppression">
            <summary>
            Applies noise suppression specifically designed for voice calls,
            reducing background noise to enhance the clarity of the speaker's voice.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.SoundEffectType.AutoGainControl">
            <summary>
            Implements Auto Gain Control (AGC) to automatically adjust the audio levels
            during normal audio capturing, ensuring consistent volume regardless of input variations.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.SoundEffectType.NsWithAgc">
            <summary>
            Combines both Noise Suppression and Auto Gain Control,
            providing a comprehensive solution for clear and balanced audio during calls or recordings.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.SoundEffectType.ReferenceCopy">
            <summary>
            Captures and includes the output sound from a reference audio device
            in the recorded audio, allowing for enhanced audio mixing and playback. j
            This effect is particularly useful when used with <see cref="P:Tizen.Multimedia.SoundEffectInfo.ReferenceDevice"/>.
            </summary>
            <remarks>
            This effect should be used in conjunction with <see cref="P:Tizen.Multimedia.SoundEffectInfo.ReferenceDevice"/>
            to specify the audio source from which the reference sound is taken.
            </remarks>
        </member>
        <member name="F:Tizen.Multimedia.SoundEffectType.AecSpeex">
            <summary>
            Implements Acoustic Echo Cancellation (AEC) using the Speex algorithm,
            which helps to eliminate echo and improve voice clarity during calls or recordings.
            </summary>
            <remarks>
            This effect should be used with <see cref="P:Tizen.Multimedia.SoundEffectInfo.ReferenceDevice"/>
            to optimize echo cancellation based on the reference audio input.
            </remarks>
        </member>
        <member name="F:Tizen.Multimedia.SoundEffectType.AecWebrtc">
            <summary>
            Utilizes the WebRTC algorithm for Acoustic Echo Cancellation (AEC),
            effectively reducing echo and enhancing the quality of audio communications.
            </summary>
            <remarks>
            This effect should be used together with <see cref="P:Tizen.Multimedia.SoundEffectInfo.ReferenceDevice"/>
            to ensure optimal performance in echo cancellation.
            </remarks>
        </member>
        <member name="T:Tizen.Multimedia.SoundEffectInfo">
            <summary>
            Represents the configuration and parameters for applying sound effects to audio processing.
            This structure allows you to specify the type of sound effect and, if necessary,
            a reference audio device to enhance the audio processing capabilities.
            </summary>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SoundEffectInfo.#ctor(Tizen.Multimedia.SoundEffectType)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.SoundEffectInfo"/> structure
            with the specified sound effect type. The reference device is set to null.
            </summary>
            <param name="type">The SoundEffectType.</param>
            <exception cref="T:System.ArgumentException">Invalid input enum type.</exception>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SoundEffectInfo.#ctor(Tizen.Multimedia.SoundEffectType,Tizen.Multimedia.AudioDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.SoundEffectInfo"/> structure
            with the specified sound effect type and a reference audio device.
            This allows for enhanced audio processing by using additional audio data from the specified device.
            </summary>
            <param name="type">The SoundEffectType.</param>
            <param name="device">The AudioDevice to be refered.</param>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.SoundEffectInfo.Type">
            <summary>
            Gets the type of sound effect that will be applied, as specified in the <see cref="T:Tizen.Multimedia.SoundEffectType"/> enum.
            </summary>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.SoundEffectInfo.ReferenceDevice">
            <summary>
            Gets the reference audio device used by the sound effect as an additional source of audio data.
            </summary>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.StreamFocusStateChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.AudioStreamPolicy.StreamFocusStateChanged"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.StreamFocusStateChangedEventArgs.FocusOptions">
            <summary>
            Gets the focus options.
            </summary>
            <value>The focus options.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.StreamFocusStateChangedEventArgs.FocusState">
            <summary>
            Gets the changed focus state.
            </summary>
            <value>The focus state.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.StreamFocusStateChangedEventArgs.Reason">
            <summary>
            Gets the reason for state change of the focus.
            </summary>
            <value>The reason for state change of the focus.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.StreamFocusStateChangedEventArgs.ExtraInfo">
            <summary>
            Gets the extra information.
            </summary>
            <value>
            The extra information specified in <see cref="M:Tizen.Multimedia.AudioStreamPolicy.AcquireFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/> or
            <see cref="M:Tizen.Multimedia.AudioStreamPolicy.ReleaseFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/>.
            </value>
            <seealso cref="M:Tizen.Multimedia.AudioStreamPolicy.AcquireFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/>
            <seealso cref="M:Tizen.Multimedia.AudioStreamPolicy.ReleaseFocus(Tizen.Multimedia.AudioStreamFocusOptions,Tizen.Multimedia.AudioStreamBehaviors,System.String)"/>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.VolumeChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.AudioVolume.Changed"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VolumeChangedEventArgs.Type">
            <summary>
            Gets the sound type that volume is changed.
            </summary>
            <value>The sound type that volume is changed.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VolumeChangedEventArgs.Level">
            <summary>
            Gets the new volume level.
            </summary>
            <value>The new volume level.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.VolumeLevel">
            <summary>
            Provides a means to control volume levels.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VolumeLevel.Item(Tizen.Multimedia.AudioVolumeType)">
            <summary>
            Gets or sets the volume level of the specified <see cref="T:Tizen.Multimedia.AudioVolumeType"/>.
            </summary>
            <param name="type">The <see cref="T:Tizen.Multimedia.AudioVolumeType"/> to control.</param>
            <value>The current volume level.</value>
            <remarks>To set volumes, the specified privilege is required.</remarks>
            <privilege>http://tizen.org/privilege/volume.set</privilege>
            <exception cref="T:System.ArgumentException"><paramref name="type"/> is invalid.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="type"/> is <see cref="F:Tizen.Multimedia.AudioVolumeType.None"/>.<br/>
                -or-<br/>
                <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="value"/> is greater than <see cref="P:Tizen.Multimedia.MaxVolumeLevel.Item(Tizen.Multimedia.AudioVolumeType)"/>.
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have required privilege to set volume.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.DependentMediaBuffer">
            <summary>
            Represents a buffer that is dependent on the owner object.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.MediaBufferBase.ValidateRange(System.Int32,System.Int32)">
            <summary>
            Validates the range.
            </summary>
            <param name="offset"></param>
            <param name="length"></param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The offset + length is greater than <see cref="P:Tizen.Multimedia.MediaBufferBase.Length"/>.
                <para>-or-</para>
                The offset or length is less than zero.
            </exception>
        </member>
        <member name="T:Tizen.Multimedia.RotationFlip">
            <summary>
            Represents a rotation and flip for mediatool.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.ScopedMediaBuffer">
            <summary>
            Represents a scoped buffer which lives shortly such as a callback.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.CodecKind">
            <summary>
            Specifies whether a codec is an audio codec or a video codec.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.CodecKind.Audio">
            <summary>
            Audio codec.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.CodecKind.Video">
            <summary>
            Video codec.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.CodecNotSupportedException">
            <summary>
            The exception that is thrown when the codec for an input file or a data stream is not supported
            or the input is malformed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.CodecNotSupportedException.#ctor(Tizen.Multimedia.CodecKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.CodecNotSupportedException"/> class
            with <see cref="P:Tizen.Multimedia.CodecNotSupportedException.CodecKind"/> indicating which codec is not supported.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.CodecNotSupportedException.#ctor(Tizen.Multimedia.CodecKind,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.CodecNotSupportedException"/> class with
            <see cref="P:Tizen.Multimedia.CodecNotSupportedException.CodecKind"/> indicating which codec is not supported and a specified error message.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.CodecNotSupportedException.CodecKind">
            <summary>
            Gets the <see cref="P:Tizen.Multimedia.CodecNotSupportedException.CodecKind"/> of the exception.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.ColorSpace">
            <summary>
            Specifies color spaces for Tizen.Multimedia.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Y800">
            <summary>
            Y800.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.I420">
            <summary>
            I420.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.NV12">
            <summary>
            NV12.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.NV16">
            <summary>
            NV16.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.NV21">
            <summary>
            NV21.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.NV61">
            <summary>
            NV61.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.YV12">
             <summary>
             YV12.
             </summary>
            
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Yuyv">
            <summary>
            YUYV.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Yuv422">
            <summary>
            YUV422, alias for <see cref="F:Tizen.Multimedia.ColorSpace.Yuv422P"/>.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Yuv422P">
            <summary>
            YUV422P.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Uyvy">
            <summary>
            UYVY.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Rgb565">
            <summary>
            RGB565.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Rgb888">
            <summary>
            RGB888.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Rgba8888">
            <summary>
            RGBA8888.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Argb8888">
            <summary>
            ARGB8888.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Bgra8888">
            <summary>
            BGRA8888.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.ColorSpace.Bgrx8888">
            <summary>
            BGRX8888.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.DisplayType.Overlay">
            <summary>
            Overlay surface display.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.DisplayType.Surface">
            <summary>
             Evas image object surface display.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.DisplayType.None">
            <summary>
            This disposes off buffers.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.Display">
            <summary>
            Provides a means to wrap various display types.
            </summary>
            <seealso cref="T:Tizen.Multimedia.Player"/>
            <seealso cref="T:Tizen.Multimedia.Camera"/>
            <seealso cref="T:Tizen.Multimedia.Remoting.ScreenMirroring"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Display.#ctor(Tizen.Multimedia.MediaView)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Display"/> class with a <see cref="T:Tizen.Multimedia.MediaView"/> class.
            </summary>
            <param name="mediaView">A <see cref="T:Tizen.Multimedia.MediaView"/> to display.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Display.#ctor(ElmSharp.Window)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Display"/> class with a <see cref="T:ElmSharp.Window"/> class.
            </summary>
            <param name="window">A <see cref="T:ElmSharp.Window"/> to display.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Display.#ctor(Tizen.NUI.Window)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Display"/> class with a <see cref="T:Tizen.NUI.Window"/> class.
            </summary>
            <param name="window">A <see cref="T:Tizen.NUI.Window"/> to display.</param>
            <remarks>
            The <see cref="P:Tizen.NUI.Window.BackgroundColor"/> must be <see cref="F:Tizen.NUI.Color.Transparent"/>
            for the <see cref="T:Tizen.Multimedia.Display"/> to be rendered correctly.
            </remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Display.#ctor(Tizen.NUI.Window,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Display"/> class with a <see cref="T:Tizen.NUI.Window"/> class.
            </summary>
            <param name="window">A <see cref="T:Tizen.NUI.Window"/> to display.</param>
            <param name="uiSync">A value indicates whether video and UI is in sync or not.</param>
            <remarks>
            The <see cref="P:Tizen.NUI.Window.BackgroundColor"/> must be <see cref="F:Tizen.NUI.Color.Transparent"/>
            for the <see cref="T:Tizen.Multimedia.Display"/> to be rendered correctly.<br/>
            UI sync is only for <see cref="T:Tizen.Multimedia.Player"/> and
            <see cref="T:Tizen.Multimedia.Player.DisplaySettings"/> will not work in UI sync mode.
            </remarks>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Display.#ctor(Tizen.Common.IWindowProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Display"/> class with an <see cref="T:Tizen.Common.IWindowProvider"/> interface.
            </summary>
            <param name="window">An <see cref="T:Tizen.Common.IWindowProvider"/> object that provides a handle to a window.</param>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Display.#ctor(Tizen.Common.IWindowProvider,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Display"/> class with an <see cref="T:Tizen.Common.IWindowProvider"/> interface.
            </summary>
            <param name="window">An <see cref="T:Tizen.Common.IWindowProvider"/> object that provides a handle to a window.</param>
            <param name="uiSync">A value indicating whether video and UI are in sync or not.</param>
            <remarks>
            UI sync is only for <see cref="T:Tizen.Multimedia.Player"/> and
            <see cref="T:Tizen.Multimedia.Player.DisplaySettings"/> will not work in UI sync mode.
            </remarks>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.FileFormatException">
            <summary>
            The exception that is thrown when an input file or a data stream that is supposed to conform
            to a certain file format specification, is malformed.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.FileFormatException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.FileFormatException"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.FileFormatException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.FileFormatException"/> class with a specified error message.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Flips">
            <summary>
            Specifies the flip operation.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Flips.None">
            <summary>
            No flip operation.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Flips.Horizontal">
            <summary>
            Flip horizontally.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Flips.Vertical">
            <summary>
            Flip vertically.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.IMediaBuffer">
            <summary>
            Provides functionality to read and write the media buffer.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.IMediaBuffer.Item(System.Int32)">
            <summary>
            Gets or sets a value at the specified index.
            </summary>
            <param name="index">The index of the value to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="index"/> is equal to or greater than <see cref="P:Tizen.Multimedia.IMediaBuffer.Length"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The object that owns the current buffer has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The buffer is not available, i.e. not writable state.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.IMediaBuffer.Length">
            <summary>
            Gets the size of the buffer, in bytes.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.IMediaBuffer.IsReadOnly">
            <summary>
            Gets the value indicating whether the <see cref="T:Tizen.Multimedia.IMediaBuffer"/> is read-only.
            </summary>
            <value> true if the <see cref="T:Tizen.Multimedia.IMediaBuffer"/> is read-only; otherwise, false.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.IMediaBuffer.CopyTo(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies data from the buffer to a byte array.
            </summary>
            <param name="dest">The array to copy to.</param>
            <param name="startIndex">The zero-based index in the source array where copying should start.</param>
            <param name="length">The number of array elements to copy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dest"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex"/> or <paramref name="length"/> is not valid.</exception>
            <exception cref="T:System.ObjectDisposedException">The object that owns the current buffer has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.IMediaBuffer.CopyTo(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies data from the buffer to a byte array.
            </summary>
            <param name="dest">The array to copy to.</param>
            <param name="startIndex">The zero-based index in the source array where copying should start.</param>
            <param name="length">The number of array elements to copy.</param>
            <param name="offset">The zero-based index in the buffer where copying should start.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dest"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex"/>, <paramref name="length"/>,
                or <paramref name="offset"/> is not valid.</exception>
            <exception cref="T:System.ObjectDisposedException">The object that owns the current buffer has already been disposed of.</exception>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.IMediaBuffer.CopyFrom(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies data from a byte array to the buffer.
            </summary>
            <param name="source">The array to copy from.</param>
            <param name="startIndex">The zero-based index in the destination array where copying should start.</param>
            <param name="length">The number of elements to copy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex"/> or <paramref name="length"/> is not valid.</exception>
            <exception cref="T:System.ObjectDisposedException">The object that owns the current buffer has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The buffer is not available. i.e. not writable state.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.IMediaBuffer.CopyFrom(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies data from a byte array to the buffer.
            </summary>
            <param name="source">The array to copy from.</param>
            <param name="startIndex">The zero-based index in the destination array where copying should start.</param>
            <param name="length">The number of elements to copy.</param>
            <param name="offset">The zero-based index in the buffer where copying should start.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex"/>, <paramref name="length"/>,
                or <paramref name="offset"/> is not valid.</exception>
            <exception cref="T:System.ObjectDisposedException">The object that owns the current buffer has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The buffer is not available. i.e. not writable state.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Point">
            <summary>
            Represents a point in the 2D space.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Point with the specified coordinates.
            </summary>
            <param name="x">X-axis coordinate of the point in the 2D space.</param>
            <param name="y">Y-axis coordinate of the point in the 2D space.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Point.X">
            <summary>
            Gets or sets the X-axis coordinate of the point in the 2D space.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Point.Y">
            <summary>
            Gets or sets the Y-axis coordinate of the point in the 2D space.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Point.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Point.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.Point"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.Point"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Point.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.Point"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the points are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Point.op_Equality(Tizen.Multimedia.Point,Tizen.Multimedia.Point)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Point"/> for equality.
            </summary>
            <param name="point1">A <see cref="T:Tizen.Multimedia.Point"/> to compare.</param>
            <param name="point2">A <see cref="T:Tizen.Multimedia.Point"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Point"/> are equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Point.op_Inequality(Tizen.Multimedia.Point,Tizen.Multimedia.Point)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Point"/> for inequality.
            </summary>
            <param name="point1">A <see cref="T:Tizen.Multimedia.Point"/> to compare.</param>
            <param name="point2">A <see cref="T:Tizen.Multimedia.Point"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Point"/> are not equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Range">
            <summary>
            Represents a range(min, max) value.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Range.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the range with the specified values.
            </summary>
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            <exception cref="T:System.ArgumentException"><paramref name="max"/> is less than <paramref name="min"/>.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Range.Min">
            <summary>
            Gets or sets the minimum value of the range.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Range.Max">
            <summary>
            Gets or sets the maximum value of the range.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Range.Length">
            <summary>
            Gets the length of the range.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Range.IsInside(System.Int32)">
            <summary>
            Determines if the specified value is within the range.
            </summary>
            <param name="value">The value to check.</param>
            <returns>true if the value is within the range; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Range.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Range.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.Range"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.Range"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Range.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.Range"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the two ranges are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Range.op_Equality(Tizen.Multimedia.Range,Tizen.Multimedia.Range)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Range"/> for equality.
            </summary>
            <param name="range1">A <see cref="T:Tizen.Multimedia.Range"/> to compare.</param>
            <param name="range2">A <see cref="T:Tizen.Multimedia.Range"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Range"/> are equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Range.op_Inequality(Tizen.Multimedia.Range,Tizen.Multimedia.Range)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Range"/> for inequality.
            </summary>
            <param name="range1">A <see cref="T:Tizen.Multimedia.Range"/> to compare.</param>
            <param name="range2">A <see cref="T:Tizen.Multimedia.Range"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Range"/> are not equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Rectangle">
            <summary>
            Represents the location of the object bounded by a rectangle defined by
            coordinates of top left corner, width and height.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Rectangle"/> with the specified values.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name="width">The Width of the rectangle.</param>
            <param name="height">The Height of the rectangle.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Rectangle.#ctor(Tizen.Multimedia.Point,Tizen.Multimedia.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Rectangle"/> with the specified values.
            </summary>
            <param name="location">A <see cref="P:Tizen.Multimedia.Rectangle.Location"/> that represents the upper-left corner of the rectangular region.</param>
            <param name="size">A <see cref="P:Tizen.Multimedia.Rectangle.Size"/> that represents the width and height of the rectangular region.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.X">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Y">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Left">
            <summary>
            Gets the x-coordinate of the left edge of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Top">
            <summary>
            Gets the y-coordinate of the top edge of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Right">
            <summary>
            Gets the x-coordinate of the right edge of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Bottom">
            <summary>
            Gets the y-coordinate of the bottom edge of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Rectangle.Size">
            <summary>
            Gets or sets the size of the rectangle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Rectangle.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Rectangle.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.Rectangle"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.Rectangle"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Rectangle.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.Rectangle"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the rectangles are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Rectangle.op_Equality(Tizen.Multimedia.Rectangle,Tizen.Multimedia.Rectangle)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Rectangle"/> for equality.
            </summary>
            <param name="rect1">A <see cref="T:Tizen.Multimedia.Rectangle"/> to compare.</param>
            <param name="rect2">A <see cref="T:Tizen.Multimedia.Rectangle"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Rectangle"/> are equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Rectangle.op_Inequality(Tizen.Multimedia.Rectangle,Tizen.Multimedia.Rectangle)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Rectangle"/> for inequality.
            </summary>
            <param name="rect1">A <see cref="T:Tizen.Multimedia.Rectangle"/> to compare.</param>
            <param name="rect2">A <see cref="T:Tizen.Multimedia.Rectangle"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Rectangle"/> are not equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Rotation">
            <summary>
            Specifies the directions of rotation.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Rotation.Rotate0">
            <summary>
            No rotation.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Rotation.Rotate90">
            <summary>
            Rotate clockwise by 90 degrees.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Rotation.Rotate180">
            <summary>
            Rotate clockwise by 180 degrees.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Rotation.Rotate270">
            <summary>
            Rotate clockwise by 270 degrees.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.Size">
            <summary>
            Represents a size in 2D space.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Size.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Size"/> with the specified values.
            </summary>
            <param name="width">Width of the size.</param>
            <param name="height">Height of the size.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Size.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Size.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Size.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Size.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.Size"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.Size"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Size.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.Size"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the two sizes are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Size.op_Equality(Tizen.Multimedia.Size,Tizen.Multimedia.Size)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Size"/> for equality.
            </summary>
            <param name="size1">A <see cref="T:Tizen.Multimedia.Size"/> to compare.</param>
            <param name="size2">A <see cref="T:Tizen.Multimedia.Size"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Size"/> are equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Size.op_Inequality(Tizen.Multimedia.Size,Tizen.Multimedia.Size)">
            <summary>
            Compares two instances of <see cref="T:Tizen.Multimedia.Size"/> for inequality.
            </summary>
            <param name="size1">A <see cref="T:Tizen.Multimedia.Size"/> to compare.</param>
            <param name="size2">A <see cref="T:Tizen.Multimedia.Size"/> to compare.</param>
            <returns>true if the two instances of <see cref="T:Tizen.Multimedia.Size"/> are not equal; otherwise false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Visibility">
            <summary>
            Specifies visibilities.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.Visibility.Invisible">
            <summary>
            Invisible.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.Visibility.Visible">
            <summary>
            Visible.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.AudioMediaFormat">
            <summary>
            Represents an audio media format. This class cannot be inherited.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.#ctor(Tizen.Multimedia.MediaFormatAudioMimeType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the AudioMediaFormat class with the specified mime type,
            channel, sample rate, bit, and bit rate.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="channel">The channel value of the format.</param>
            <param name="sampleRate">The sample rate value of the format.</param>
            <param name="bit">The bit value of the format.</param>
            <param name="bitRate">The bit rate value of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid(i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="channel"/>, <paramref name="sampleRate"/>, <paramref name="bit"/>, or <paramref name="bitRate"/> is less than zero.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.#ctor(Tizen.Multimedia.MediaFormatAudioMimeType,System.Int32,System.Int32,System.Int32,System.Int32,Tizen.Multimedia.MediaFormatAacType)">
            <summary>
            Initializes a new instance of the AudioMediaFormat class with the specified mime type,
                channel, sample rate, bit, bit rate, and AAC type.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="channel">The channel value of the format.</param>
            <param name="sampleRate">The sample rate value of the format.</param>
            <param name="bit">The bit value of the format.</param>
            <param name="bitRate">The bit rate value of the format.</param>
            <param name="aacType">The AAC bitstream format(ADIF or ADTS).</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="mimeType"/> or <paramref name="aacType"/> is invalid (i.e. undefined value).<br/>
                -or-<br/>
                <paramref name="aacType"/> is not <see cref="F:Tizen.Multimedia.MediaFormatAacType.None"/>, but <paramref name="mimeType"/> is one of the AAC types.
                </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="channel"/>, <paramref name="sampleRate"/>, <paramref name="bit"/>, or <paramref name="bitRate"/> is less than zero.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.#ctor(Tizen.Multimedia.MediaFormatAudioMimeType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{Tizen.Multimedia.MediaFormatAudioChannelPosition})">
            <summary>
            Initializes a new instance of the AudioMediaFormat class with the specified mime type,
            channel, sample rate, bit, bit rate, bit depth, and audio channel map.
            </summary>
            <remarks>
            If <paramref name="audioChannelMap"/> contains <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.None"/>,
            <paramref name="channel"/> should be set greater than 0.<br/>
            If <paramref name="audioChannelMap"/> contains <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Mono"/>,
            <paramref name="channel"/> should be set 1.<br/>
            User can not set <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.None"/> with another channel positions.<br/>
            User can not set <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Mono"/> with another channel positions.<br/>
            If same channel position is added in <paramref name="audioChannelMap"/> more than once, the duplicaiton will be removed.
            </remarks>
            <param name="mimeType">The mime type of the format.</param>
            <param name="channel">The channel value of the format.</param>
            <param name="sampleRate">The sample rate value of the format.</param>
            <param name="bit">The bit value of the format.</param>
            <param name="bitRate">The bit rate value of the format.</param>
            <param name="bitDepth">The bit depth value of the PCM audio format.</param>
            <param name="audioChannelMap">The loudspeaker position in PCM audio format.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="mimeType"/> is invalid (i.e. undefined value).<br/>
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="audioChannelMap"/> is invalid or mismatched with <paramref name="channel"/> like the following:<br/>
                <paramref name="audioChannelMap"/> is not matched correctly with <paramref name="channel"/>.
                -or-<br/>
                <paramref name="audioChannelMap"/> is set to <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Invaild"/>.
                -or-<br/>
                <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Mono"/> or <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.None"/> is set with another channel position.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="channel"/>, <paramref name="sampleRate"/>, <paramref name="bit"/>, or <paramref name="bitRate"/>,
                <paramref name="bitDepth"/> is less than zero.
            </exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.#ctor(Tizen.Multimedia.MediaFormatAudioMimeType,System.Int32,System.Int32,System.Int32,System.Int32,Tizen.Multimedia.MediaFormatAacType,System.Int32,System.Collections.Generic.IList{Tizen.Multimedia.MediaFormatAudioChannelPosition})">
            <summary>
            Initializes a new instance of the AudioMediaFormat class with the specified mime type,
            channel, sample rate, bit, bit rate, bit depth, and audio channel map.
            </summary>
            <remarks>
            If <paramref name="audioChannelMap"/> contains <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.None"/>,
            <paramref name="channel"/> should be set greater than 0.<br/>
            If <paramref name="audioChannelMap"/> contains <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Mono"/>,
            <paramref name="channel"/> should be set 1.<br/>
            User can not set <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.None"/> with another channel positions.<br/>
            User can not set <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Mono"/> with another channel positions.<br/>
            If same channel position is added in <paramref name="audioChannelMap"/> more than twice, its duplicaiton will be removed.
            </remarks>
            <param name="mimeType">The mime type of the format.</param>
            <param name="channel">The channel value of the format.</param>
            <param name="sampleRate">The sample rate value of the format.</param>
            <param name="bit">The bit value of the format.</param>
            <param name="bitRate">The bit rate value of the format.</param>
            <param name="aacType">The AAC bitstream format(ADIF or ADTS).</param>
            <param name="bitDepth">The bit depth value of the PCM audio format.</param>
            <param name="audioChannelMap">The loudspeaker position in PCM audio format.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="mimeType"/> or <paramref name="aacType"/> is invalid (i.e. undefined value).<br/>
                -or-<br/>
                <paramref name="aacType"/> is not <see cref="F:Tizen.Multimedia.MediaFormatAacType.None"/>, but <paramref name="mimeType"/> is one of the AAC types.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="audioChannelMap"/> is invalid or mismatched with <paramref name="channel"/> like the following:<br/>
                <paramref name="audioChannelMap"/> is not matched correctly with <paramref name="channel"/>.
                -or-<br/>
                <paramref name="audioChannelMap"/> is set to <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Invaild"/>.
                -or-<br/>
                <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Mono"/> or <see cref="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.None"/> is set with another channel position.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="channel"/>, <paramref name="sampleRate"/>, <paramref name="bit"/>, or <paramref name="bitRate"/>,
                <paramref name="bitDepth"/> is less than zero.
            </exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the AudioMediaFormat class from a native handle.
            </summary>
            <param name="handle">A native handle.</param>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.IsAacSupportedMimeType(Tizen.Multimedia.MediaFormatAudioMimeType)">
            <summary>
            Returns an indication whether a specified mime type is an AAC type.
            </summary>
            <param name="mimeType">A mime type.</param>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.GetInfo(System.IntPtr,Tizen.Multimedia.MediaFormatAudioMimeType@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves audio properties of the media format from a native handle.
            </summary>
            <param name="handle">A native handle that the properties are retrieved from.</param>
            <param name="mimeType">An out parameter for the mime type.</param>
            <param name="channel">An out parameter for the channel.</param>
            <param name="sampleRate">An out parameter for the sample rate.</param>
            <param name="bit">An out parameter for the bit.</param>
            <param name="bitRate">An out parameter for the bit rate.</param>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.GetAacType(System.IntPtr)">
            <summary>
            Retrieves the AAC type value from a native handle.
            </summary>
            <param name="handle">A native handle that the properties are retrieved from.</param>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.MimeType">
            <summary>
            Gets the mime type of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.Channel">
            <summary>
            Gets the channel value of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.AudioChannelMap">
            <summary>
            Gets or sets the list of channel position value of PCM audio format.
            </summary>
            <remarks>
            The channel mask specifies the mapping of channels to speakers.
            default value is 0.
            </remarks>
            <seealso cref="P:Tizen.Multimedia.AudioMediaFormat.Channel"/>
            <seealso cref="T:Tizen.Multimedia.MediaFormatAudioChannelPosition"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.SampleRate">
            <summary>
            Gets the sample rate value of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.Bit">
            <summary>
            Gets the bit value of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.BitRate">
            <summary>
            Gets the bit rate value of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.BitDepth">
            <summary>
            Gets the bit depth value of the current format.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioMediaFormat.AacType">
            <summary>
            Gets the AAC type of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.AudioMediaFormat"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the formats are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioMediaFormat.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.AudioMediaFormat"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.AudioMediaFormat"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.ContainerMediaFormat">
            <summary>
            Represents a container media format. This class cannot be inherited.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.ContainerMediaFormat.#ctor(Tizen.Multimedia.MediaFormatContainerMimeType)">
            <summary>
            Initializes a new instance of the ContainerMediaFormat class.
            </summary>
            <param name="mimeType">The mime type of the container format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.ContainerMediaFormat.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the ContainerMediaFormat class from a native handle.
            </summary>
            <param name="handle">A native media format handle.</param>
        </member>
        <member name="P:Tizen.Multimedia.ContainerMediaFormat.MimeType">
            <summary>
            Gets the mime type of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.ContainerMediaFormat.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.ContainerMediaFormat.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.ContainerMediaFormat"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the formats are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.ContainerMediaFormat.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.ContainerMediaFormat"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.ContainerMediaFormat"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormat">
            <summary>
            MediaFormat is a base class for media formats.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaFormat.#ctor(Tizen.Multimedia.MediaFormatType)">
            <summary>
            Initializes a new instance of the ContainerMediaFormat class with a type.
            </summary>
            <param name="type">A type for the format.</param>
        </member>
        <member name="P:Tizen.Multimedia.MediaFormat.Type">
            <summary>
            Gets the type of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaFormat.FromHandle(System.IntPtr)">
            <summary>
            Creates a media format from a native handle.
            </summary>
            <param name="handle">A native handle.</param>
            <returns>An object of one of the subclasses of <see cref="T:Tizen.Multimedia.MediaFormat"/>.</returns>
        </member>
        <member name="M:Tizen.Multimedia.MediaFormat.AsNativeHandle">
            <summary>
            Creates a native media format from this object.
            </summary>
            <returns>A converted native handle.</returns>
            <remarks>The returned handle must be destroyed using <see cref="M:Tizen.Multimedia.Interop.MediaFormat.Unref(System.IntPtr)"/>.</remarks>
        </member>
        <member name="M:Tizen.Multimedia.MediaFormat.AsNativeHandle(System.IntPtr)">
            <summary>
            Fills out properties of a native media format with the current media format object.
            </summary>
            <param name="handle">A native handle to be written.</param>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatAacType">
            <summary>
            Specifies the AAC types for <see cref="T:Tizen.Multimedia.AudioMediaFormat"/>.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAacType.None">
            <summary>
            Raw, no header.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAacType.Adts">
            <summary>
            ADTS header.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAacType.Adif">
            <summary>
            ADIF header.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatAudioMimeType">
            <summary>
            Specifies the mime types for audio media formats.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Amr">
            <summary>
            AMR, alias for <see cref="F:Tizen.Multimedia.MediaFormatAudioMimeType.AmrNB"/>.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.AmrNB">
            <summary>
            AMR-NB.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.AmrWB">
            <summary>
            AMR-WB.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Aac">
            <summary>
            AAC, alias for <see cref="F:Tizen.Multimedia.MediaFormatAudioMimeType.AacLC"/>.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.AacLC">
            <summary>
            AAC-LC (Advanced Audio Coding Low-Complexity profile).
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.AacHE">
            <summary>
            HE-AAC (High-Efficiency Advanced Audio Coding).
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.AacHEPS">
            <summary>
            HE-AAC-PS (High-Efficiency Advanced Audio Coding with Parametric Stereo).
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.MP3">
            <summary>
            MP3.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Vorbis">
            <summary>
            VORBIS.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Flac">
            <summary>
            FLAC.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Wma1">
            <summary>
            Windows Media Audio 1.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Wma2">
            <summary>
            Windows Media Audio 2.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.WmaPro">
            <summary>
            Windows Media Audio Professional.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.WmaLossless">
            <summary>
            Windows Media Audio Lossless.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Ac3">
            <summary>
            AC3.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Eac3">
            <summary>
            Enhanced AC3.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Dts">
            <summary>
            Digital Theater Systems.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Opus">
            <summary>
            OPUS.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioMimeType.Pcm">
            <summary>
            PCM.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatAudioChannelPosition">
            <summary>
            Specifies the channel position of <see cref="F:Tizen.Multimedia.MediaFormatAudioMimeType.Pcm"/> media format.
            </summary>
            <remarks>This type is based on SMPTE 2036-2-2008 standard.</remarks>
            <seealso cref="T:Tizen.Multimedia.MediaFormatAudioMimeType"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.None">
            <summary>
            This is used for position-less channels.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Mono">
            <summary>
            Mono channel.
            </summary>
            <remarks>If user want to set this value, <see cref="P:Tizen.Multimedia.AudioMediaFormat.Channel"/> should be 1.</remarks>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.Invaild">
            <summary>
            Invalid position.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.FrontLeft">
            <summary>
            A loudspeaker position located at far left and centered vertically with the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.FrontRight">
            <summary>
            A loudspeaker position located at far right and centered vertically with the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.FrontCenter">
            <summary>
            A loudspeaker position located at the middle layer corresponding to the center of the television
            screen as viewed from the seating area.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.LFE1">
            <summary>
            A Low Frequency Effects(band-limited low frequency channel) loudspeaker position located at
            the bottom layer and normally far left front, when LFE2 is used.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.BackLeft">
            <summary>
            A loudspeaker position located at far left back of the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.BackRight">
            <summary>
            A loudspeaker position located at far right back of the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.FrontLeftOrCenter">
            <summary>
            A loudspeaker position located mid-way between the front center and front left of the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.FrontRightOrCenter">
            <summary>
            A loudspeaker position located mid-way between the front center and front right of the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.BackCenter">
            <summary>
            A loudspeaker position located at center back of the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.LFE2">
            <summary>
            A Low Frequency Effects(band-limited low frequency channel) loudspeaker position located at the
            bottom layer, and is normally at far right front of the bottom layer, when LFE1 is used. 
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.SideLeft">
            <summary>
            A loudspeaker position located at left side of the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.SideRight">
            <summary>
            A loudspeaker position located at right side of the middle layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopFrontLeft">
            <summary>
            A loudspeaker position located at far left front of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopFrontRight">
            <summary>
            A loudspeaker position located at far right front of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopFrontCenter">
            <summary>
            A loudspeaker position located at center front of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopCenter">
            <summary>
            A loudspeaker position located at the center of the top layer directly above the seating area.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopBackLeft">
            <summary>
            A loudspeaker position located at far left back of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopBackRight">
            <summary>
            A loudspeaker position located at far right back of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopSideLeft">
            <summary>
            A loudspeaker position located at left side of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopSideRight">
            <summary>
            A loudspeaker position located at right side of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.TopBackCenter">
            <summary>
            A loudspeaker position located at center back of the top layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.BottomFrontCenter">
            <summary>
            A loudspeaker position located at center front of the bottom layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.BottomFrontLeft">
            <summary>
            A loudspeaker position located at far left front of the bottom layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.BottomFrontRight">
            <summary>
            A loudspeaker position located at far right front of the bottom layer.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.WideLeft">
            <summary>
            A loudspeaker position located between front left and side left.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.WideRight">
            <summary>
            A loudspeaker position located between front right and side right.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.SurroundLeft">
            <summary>
            A loudspeaker position located between back left and side left.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatAudioChannelPosition.SurroundRight">
            <summary>
            A loudspeaker position located between back right and side right.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatContainerMimeType">
            <summary>
            Specifies the mime types for container media formats.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.MP4">
            <summary>
            MP4 container, video.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.Avi">
            <summary>
            AVI container, video.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.Mpeg2TS">
            <summary>
            MPEG2TS container, video.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.Mpeg2PS">
            <summary>
            MPEG2PS container, video.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.Matroska">
            <summary>
            MATROSKA container, video.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.Webm">
            <summary>
            WEBM container, video.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.ThreeGP">
            <summary>
            3GP container, video.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.Wav">
            <summary>
            WAV container, audio.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.Ogg">
            <summary>
             OGG container, audio
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.AacAdts">
            <summary>
            AAC_ADTS container, audio
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatContainerMimeType.AacAdif">
            <summary>
            AAC_ADIF container, audio.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatDataType">
            <summary>
            Specifies the media format data types.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatDataType.Encoded">
            <summary>
            Encoded type.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatDataType.Raw">
            <summary>
            Raw type.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatTextMimeType">
            <summary>
            Specifies the text mime types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatTextMimeType.MP4">
            <summary>
            MP4.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatTextMimeType.ThreeGP">
            <summary>
            3GP.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatTextType">
            <summary>
            Specifies the text types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatTextType.None">
            <summary>
            This indicates no type specified.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatTextType.MP4">
            <summary>
            MP4.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatTextType.ThreeGpp">
            <summary>
            3GPP.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatType">
            <summary>
            Specifies the media format types.
            </summary>
            <seealso cref="T:Tizen.Multimedia.MediaFormat"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatType.Audio">
            <summary>
            Audio media format.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatType.Video">
            <summary>
            Video media format.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatType.Container">
            <summary>
            Container media format.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatType.Text">
            <summary>
            Text media format.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaFormatVideoMimeType">
            <summary>
            Specifies the mime types for video media formats.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.H261">
            <summary>
            H261.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.H263">
            <summary>
            H263.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.H263P">
            <summary>
            H263P.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.H264SP">
            <summary>
            H264_SP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.H264MP">
            <summary>
            H264_MP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.H264HP">
            <summary>
            H264_HP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.MJpeg">
            <summary>
            MJPEG
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Mpeg1">
            <summary>
            MPEG1.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Mpeg2SP">
            <summary>
            MPEG2_SP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Mpeg2MP">
            <summary>
            MPEG2_MP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Mpeg2HP">
            <summary>
            MPEG2_HP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Mpeg4SP">
            <summary>
            MPEG4_SP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Mpeg4Asp">
            <summary>
            MPEG4_ASP.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Hevc">
            <summary>
            HEVC.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.HevcMp">
            <summary>
            HEVC MP.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.HevcM10p">
            <summary>
            HEVC M10P.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Vp8">
            <summary>
            VP8.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Vp9">
            <summary>
            VP9.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Vc1">
            <summary>
            VC1.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Divx4">
            <summary>
            DIVX4.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Divx5">
            <summary>
            DIVX5.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Xvid">
            <summary>
            XVID.
            </summary>
            <since_tizen> 9 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Av1">
            <summary>
            AOMedia Video 1.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.I420">
            <summary>
            I420.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.NV12">
            <summary>
            NV12.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.NV12T">
            <summary>
            NV12T.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.YV12">
            <summary>
            YV12.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.NV21">
            <summary>
            NV21.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.NV16">
            <summary>
            NV16.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Yuyv">
            <summary>
            YUYV.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Uyvy">
            <summary>
            UYVY.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Yuv422P">
            <summary>
            422P.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Rgb565">
            <summary>
            RGB565.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Rgb888">
            <summary>
            RGB888.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Rgba">
            <summary>
            RGBA.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Argb">
            <summary>
            ARGB.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Bgra">
            <summary>
            BGRA.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaFormatVideoMimeType.Y8">
            <summary>
            Y8.
            </summary>
            <since_tizen> 8 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaPacket">
            <summary>
            Represents a packet for multimedia.
            </summary>
            <summary>
            Represents a packet for multimedia.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.#ctor(Tizen.Multimedia.MediaFormat)">
            <summary>
            Initializes a new instance of the MediaPacket class with the specified media format.
            </summary>
            <param name="format">The media format containing properties for the packet.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="format"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
                The <see cref="T:Tizen.Multimedia.MediaFormatType"/> of the specified format is <see cref="F:Tizen.Multimedia.MediaFormatType.Container"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.#ctor(Tizen.Multimedia.MediaPacket)">
            <summary>
            Initializes a new instance of the MediaPacket class from an original MediaPacket.
            </summary>
            <param name="mediaPacket">The original MediaPacket.</param>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the MediaPacket class from a native handle.
            </summary>
            <param name="handle">The native handle to be used.</param>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.Finalize">
            <summary>
            Finalizes an instance of the MediaPacket class.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.Initialize(Tizen.Multimedia.MediaFormat)">
            <summary>
            Creates and initializes a native handle for the current object.
            </summary>
            <param name="format">The format to be set to the media format.</param>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.Alloc">
            <summary>
            Allocates internal buffer.
            </summary>
            <exception cref="T:System.InvalidOperationException">Operation failed.</exception>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.Format">
            <summary>
            Gets the media format of the current packet.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.Pts">
            <summary>
            Gets or sets the PTS(Presentation Time Stamp) value of the current packet in nanoseconds.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket is not in the writable state, which means it is being used by another module.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.Dts">
            <summary>
            Gets or sets the DTS(Decoding Time Stamp) value of the current packet in nanoseconds.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket is not in the writable state, which means it is being used by another module.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.Duration">
            <summary>
            Gets or sets the duration value of the current packet in nanoseconds.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket is not in the writable state, which means it is being used by another module.
            </exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.IsEncoded">
            <summary>
            Gets a value indicating whether the packet is the encoded type.
            </summary>
            <value>true if the packet is the encoded type; otherwise, false.</value>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.Rotation">
            <summary>
            Gets or sets the rotation value of the current packet.
            </summary>
            <exception cref="T:System.ArgumentException">The specified value to set is invalid.</exception>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket is not in the writable state, which means it is being used by another module.
            </exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.Flip">
            <summary>
            Gets or sets the flip value of the current packet.
            </summary>
            <remarks>
            <see cref="F:Tizen.Multimedia.Flips.None"/> will be ignored in set case. It's not supported in Native FW.
            </remarks>
            <exception cref="T:System.ArgumentException">The specified value to set is invalid.</exception>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket is not in the writable state, which means it is being used by another module.
            </exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.Buffer">
            <summary>
            Gets the buffer of the packet.
            </summary>
            <value>
            The <see cref="T:Tizen.Multimedia.IMediaBuffer"/> allocated to the packet.
            This property will return null if the packet is in the raw video format.
            </value>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <seealso cref="P:Tizen.Multimedia.MediaPacket.IsEncoded"/>
            <seealso cref="P:Tizen.Multimedia.MediaPacket.VideoPlanes"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.BufferWrittenLength">
            <summary>
            Gets or sets a length of data written in the <see cref="P:Tizen.Multimedia.MediaPacket.Buffer"/>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The value specified for this property is less than zero or greater than the length of the <see cref="P:Tizen.Multimedia.MediaPacket.Buffer"/>.</exception>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket has <see cref="P:Tizen.Multimedia.MediaPacket.VideoPlanes"/> instead of <see cref="P:Tizen.Multimedia.MediaPacket.Buffer"/>.<br/>
                -or-<br/>
                The MediaPacket is not in the writable state, which means it is being used by another module.
                </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.VideoPlanes">
            <summary>
            Gets the video planes of the packet.
            </summary>
            <value>The <see cref="T:Tizen.Multimedia.MediaPacketVideoPlane"/>s allocated to the packet.
                This property will return null if the packet is not in the raw video format.</value>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <seealso cref="P:Tizen.Multimedia.MediaPacket.IsEncoded"/>
            <seealso cref="P:Tizen.Multimedia.MediaPacket.Buffer"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.BufferFlags">
            <summary>
            Gets or sets the buffer flags of the packet.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket is not in the writable state, which means it is being used by another module.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.TbmSurface">
            <summary>
            Gets the pointer to the TBM surface object associated with the packet.
            </summary>
            <value>
            The pointer to the TBM surface object.<br/>
            If packet doesn't have TBM surface, this will return IntPtr.Zero.
            </value>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.HasTbmSurface">
            <summary>
            Gets a value indicating whether the packet has TBM surface or not.
            </summary>
            <value>true if the packet has TBM surface; otherwise, false.</value>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <since_tizen> 12 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.IsDisposed">
            <summary>
            Gets a value indicating whether the packet has been disposed.
            </summary>
            <value>true if the packet has been disposed of; otherwise, false.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Tizen.Multimedia.MediaPacket"/> object.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                The MediaPacket can not be disposed, which means it is being used by another module.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:Tizen.Multimedia.MediaPacket"/> object.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.ValidateNotDisposed">
            <summary>
            Validates the current object has not been disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.DisableNativeHandleDestroy">
            <summary>
            Disables native handle destruction when native fw destroys media packet handle itself.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.EnsureWritableState">
            <summary>
            Ensures whether the packet is writable.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The MediaPacket is being used by another module.</exception>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.EnsureReadableState">
            <summary>
            Ensures whether the packet is readable.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed.</exception>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacket.IsVideoPlaneSupported">
            <summary>
            Gets a value indicating whether the packet is in the raw video format.
            </summary>
            <value>true if the packet is in the raw video format; otherwise, false.</value>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.GetVideoPlanes">
            <summary>
            Retrieves video planes of the current packet.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.MediaPacketVideoPlane"/>s allocated to the current MediaPacket.</returns>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.GetBuffer">
            <summary>
            Retrieves the buffer of the current packet.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.IMediaBuffer"/> allocated to the current MediaPacket.</returns>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.Create(Tizen.Multimedia.MediaFormat)">
            <summary>
            Creates an object of the MediaPacket with the specified <see cref="T:Tizen.Multimedia.MediaFormat"/>.
            </summary>
            <param name="format">The media format for the new packet.</param>
            <returns>A new MediaPacket object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.Create(Tizen.Multimedia.MediaPacket)">
            <summary>
            Creates an object of the MediaPacket based on the original MediaPacket and increases the internal reference(hereafter ref) count by 1.
            </summary>
            <remarks>
            This method can be useful when user share MediaPacket instance to other module and don't know the exact time to dispose it.\n
            In this case, user creates a new instance with <see cref="M:Tizen.Multimedia.MediaPacket.Create(Tizen.Multimedia.MediaPacket)"/> and shares it to other module.\n
            And then, each MediaPacket instances can be disposed independently without concerning other instance's life cycle.
            </remarks>
            <param name="mediaPacket">The media packet to increase ref count.</param>
            <returns>A MediaPacket object which is based on original MediaPacket instance.</returns>
            <since_tizen> 10 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaPacket.ValidateNotLocked">
            <summary>
            Validates the current object is not locked.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The MediaPacket is in use by another module.</exception>
        </member>
        <member name="T:Tizen.Multimedia.MediaPacket.LockState">
            <summary>
            Provides a thread-safe lock state controller.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaPacket.Lock">
            <summary>
            Provides a thread-safe lock controller.
            </summary>
            <example>
            using (var lock = BaseMediaPacket.Lock(mediaPacket))
            {
                ....
            }
            </example>
        </member>
        <member name="T:Tizen.Multimedia.MediaPacketBufferFlags">
            <summary>
            Specifies the flag for a buffer.
            <para>
            This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </para>
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaPacketBufferFlags.CodecConfig">
            <summary>
            The buffer contains the codec initialization or the codec specific data instead of the media data.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaPacketBufferFlags.EndOfStream">
            <summary>
            The buffer indicates the end of the stream.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaPacketBufferFlags.SyncFrame">
            <summary>
            The buffer contains a sync frame.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaPacketVideoPlane">
            <summary>
            Represents a video plane for the <see cref="T:Tizen.Multimedia.MediaPacket"/>.
            This class is used if and only if the format of the packet is the raw video.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacketVideoPlane.Buffer">
            <summary>
            Gets the buffer of the current video plane.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket that owns the current buffer has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacketVideoPlane.StrideWidth">
            <summary>
            Gets the stride width of the current video plane.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket that owns the current buffer has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaPacketVideoPlane.StrideHeight">
            <summary>
            Gets the stride height of the current video plane.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The MediaPacket that owns the current buffer has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.TextMediaFormat">
            <summary>
            Represents a text media format. This class cannot be inherited.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.TextMediaFormat.#ctor(Tizen.Multimedia.MediaFormatTextMimeType,Tizen.Multimedia.MediaFormatTextType)">
            <summary>
            Initializes a new instance of the TextMediaFormat class with the specified mime type
                and text type.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="textType">The text type of the format.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="mimeType"/> or <paramref name="textType"/> is invalid (i.e. undefined value).
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.TextMediaFormat.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the TextMediaFormat class from a native handle.
            </summary>
            <param name="handle">A native handle.</param>
        </member>
        <member name="P:Tizen.Multimedia.TextMediaFormat.MimeType">
            <summary>
            Gets the mime type of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.TextMediaFormat.TextType">
            <summary>
            Gets the text type of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.TextMediaFormat.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.TextMediaFormat.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.TextMediaFormat"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the formats are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.TextMediaFormat.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.TextMediaFormat"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.TextMediaFormat"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.VideoMediaFormat">
            <summary>
            Represents a video media format. This class cannot be inherited.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type, width, and height.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="width">The width value of the format.</param>
            <param name="height">The height value of the format</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="width"/> or <paramref name="height"/> is less than zero.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,Tizen.Multimedia.Size)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type and size.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="size">The size of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The width or the height of <paramref name="size"/> is less than zero.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type,
            width, height, and frame rate.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="width">The width value of the format.</param>
            <param name="height">The height value of the format</param>
            <param name="frameRate">The frame rate of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="width"/>, <paramref name="height"/>, or <paramref name="frameRate"/> is less than zero.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,Tizen.Multimedia.Size,System.Int32)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type,
            width, height, and frame rate.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="size">The video size of the format.</param>
            <param name="frameRate">The frame rate of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The width or the height of <paramref name="size"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="frameRate"/> is less than zero.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type,
            width, height, frame rate, and bit rate.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="width">The width value of the format.</param>
            <param name="height">The height value of the format</param>
            <param name="frameRate">The frame rate of the format.</param>
            <param name="bitRate">The bit rate of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="width"/>, <paramref name="height"/>, <paramref name="frameRate"/>, or <paramref name="bitRate"/> is less than zero.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,Tizen.Multimedia.Size,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type,
            size, frame rate, and bit rate.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="size">The size of the format.</param>
            <param name="frameRate">The frame rate of the format.</param>
            <param name="bitRate">The bit rate of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The width or the height of <paramref name="size"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="frameRate"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="bitRate"/> is less than zero.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type,
            width, height, frame rate, bit rate and max bps.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="width">The width value of the format.</param>
            <param name="height">The height value of the format</param>
            <param name="frameRate">The frame rate of the format.</param>
            <param name="bitRate">The bit rate of the format.</param>
            <param name="maxBps">The max bps of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="width"/>, <paramref name="height"/>, <br/>
                -or-<br/>
                <paramref name="frameRate"/>, or <paramref name="bitRate"/>, or <paramref name="maxBps"/> is less than zero.
            </exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(Tizen.Multimedia.MediaFormatVideoMimeType,Tizen.Multimedia.Size,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoMediaFormat class with the specified mime type,
            size, frame rate, bit rate and max bps.
            </summary>
            <param name="mimeType">The mime type of the format.</param>
            <param name="size">The size of the format.</param>
            <param name="frameRate">The frame rate of the format.</param>
            <param name="bitRate">The bit rate of the format.</param>
            <param name="maxBps">The max bps of the format.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mimeType"/> is invalid (i.e. undefined value).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                The width or the height of <paramref name="size"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="frameRate"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="bitRate"/> is less than zero.
                -or-<br/>
                <paramref name="maxBps"/> is less than zero.
            </exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the VideoMediaForma class from a native handle.
            </summary>
            <param name="handle">A native handle.</param>
        </member>
        <member name="P:Tizen.Multimedia.VideoMediaFormat.MimeType">
            <summary>
            Gets the mime type of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoMediaFormat.Size">
            <summary>
            Gets the size of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoMediaFormat.FrameRate">
            <summary>
            Gets the frame rate value of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoMediaFormat.BitRate">
            <summary>
            Gets the bit rate value of the current format.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoMediaFormat.MaxBps">
            <summary>
            Gets the max bps value of the current format.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.Equals(System.Object)">
            <summary>
            Compares an object to an instance of <see cref="T:Tizen.Multimedia.VideoMediaFormat"/> for equality.
            </summary>
            <param name="obj">A <see cref="T:System.Object"/> to compare.</param>
            <returns>true if the formats are equal; otherwise, false.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoMediaFormat.GetHashCode">
            <summary>
            Gets the hash code for this instance of <see cref="T:Tizen.Multimedia.VideoMediaFormat"/>.
            </summary>
            <returns>The hash code for this instance of <see cref="T:Tizen.Multimedia.VideoMediaFormat"/>.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaView">
            <summary>
            The MediaView class allows application developers to display the video output on the screen.
            </summary>
            <remarks>
            This view should not be instantiated directly.<br/>
            Use <see cref="T:Tizen.Xamarin.Forms.Extension.MediaView"/> to create the view.
            </remarks>
            <example>
            <code>
            Tizen.Xamarin.Forms.Extension.MediaView mediaView = ...
            ...
            var display = new Display((Tizen.Multimedia.MediaView)mediaView.NativeView);
            </code>
            </example>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaView.#ctor(ElmSharp.EvasObject)">
            <summary>
            This constructor is used by the infrastructure and is not intended to be used directly from application code.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaView.CreateHandle(ElmSharp.EvasObject)">
            <summary>
            This method is used by the infrastructure and is not intended to be used directly from application code.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
    </members>
</doc>
